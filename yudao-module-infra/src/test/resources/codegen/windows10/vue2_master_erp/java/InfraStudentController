package cn.iocoder.yudao.module.infra.controller.admin.demo;

import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import org.springframework.validation.annotation.Validated;
import org.springframework.security.access.prepost.PreAuthorize;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Operation;

import javax.validation.constraints.*;
import javax.validation.*;
import javax.servlet.http.*;
import java.util.*;
import java.io.IOException;

import cn.iocoder.yudao.framework.common.pojo.PageParam;
import cn.iocoder.yudao.framework.common.pojo.PageResult;
import cn.iocoder.yudao.framework.common.pojo.CommonResult;
import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;

import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;

import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.*;

import cn.iocoder.yudao.module.infra.controller.admin.demo.vo.*;
import cn.iocoder.yudao.module.infra.dal.dataobject.demo.InfraStudentDO;
import cn.iocoder.yudao.module.infra.dal.dataobject.demo.InfraStudentContactDO;
import cn.iocoder.yudao.module.infra.dal.dataobject.demo.InfraStudentTeacherDO;
import cn.iocoder.yudao.module.infra.service.demo.InfraStudentService;

@Tag(name = "管理后台 - 学生")
@RestController
@RequestMapping("/infra/student")
@Validated
public class InfraStudentController {

    @Resource
    private InfraStudentService studentService;

    @PostMapping("/create")
    @Operation(summary = "创建学生")
    @PreAuthorize("@ss.hasPermission('infra:student:create')")
    public CommonResult<Long> createStudent(@Valid @RequestBody InfraStudentSaveReqVO createReqVO) {
        return success(studentService.createStudent(createReqVO));
    }

    @PutMapping("/update")
    @Operation(summary = "更新学生")
    @PreAuthorize("@ss.hasPermission('infra:student:update')")
    public CommonResult<Boolean> updateStudent(@Valid @RequestBody InfraStudentSaveReqVO updateReqVO) {
        studentService.updateStudent(updateReqVO);
        return success(true);
    }

    @DeleteMapping("/delete")
    @Operation(summary = "删除学生")
    @Parameter(name = "id", description = "编号", required = true)
    @PreAuthorize("@ss.hasPermission('infra:student:delete')")
    public CommonResult<Boolean> deleteStudent(@RequestParam("id") Long id) {
        studentService.deleteStudent(id);
        return success(true);
    }

    @GetMapping("/get")
    @Operation(summary = "获得学生")
    @Parameter(name = "id", description = "编号", required = true, example = "1024")
    @PreAuthorize("@ss.hasPermission('infra:student:query')")
    public CommonResult<InfraStudentRespVO> getStudent(@RequestParam("id") Long id) {
        InfraStudentDO student = studentService.getStudent(id);
        return success(BeanUtils.toBean(student, InfraStudentRespVO.class));
    }

    @GetMapping("/page")
    @Operation(summary = "获得学生分页")
    @PreAuthorize("@ss.hasPermission('infra:student:query')")
    public CommonResult<PageResult<InfraStudentRespVO>> getStudentPage(@Valid InfraStudentPageReqVO pageReqVO) {
        PageResult<InfraStudentDO> pageResult = studentService.getStudentPage(pageReqVO);
        return success(BeanUtils.toBean(pageResult, InfraStudentRespVO.class));
    }

    @GetMapping("/export-excel")
    @Operation(summary = "导出学生 Excel")
    @PreAuthorize("@ss.hasPermission('infra:student:export')")
    @OperateLog(type = EXPORT)
    public void exportStudentExcel(@Valid InfraStudentPageReqVO pageReqVO,
              HttpServletResponse response) throws IOException {
        pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);
        List<InfraStudentDO> list = studentService.getStudentPage(pageReqVO).getList();
        // 导出 Excel
        ExcelUtils.write(response, "学生.xls", "数据", InfraStudentRespVO.class,
                        BeanUtils.toBean(list, InfraStudentRespVO.class));
    }

    // ==================== 子表（学生联系人） ====================

    @GetMapping("/student-contact/page")
    @Operation(summary = "获得学生联系人分页")
    @Parameter(name = "studentId", description = "学生编号")
    @PreAuthorize("@ss.hasPermission('infra:student:query')")
    public CommonResult<PageResult<InfraStudentContactDO>> getStudentContactPage(PageParam pageReqVO,
                                                                                        @RequestParam("studentId") Long studentId) {
        return success(studentService.getStudentContactPage(pageReqVO, studentId));
    }

    @PostMapping("/student-contact/create")
    @Operation(summary = "创建学生联系人")
    @PreAuthorize("@ss.hasPermission('infra:student:create')")
    public CommonResult<Long> createStudentContact(@Valid @RequestBody InfraStudentContactDO studentContact) {
        return success(studentService.createStudentContact(studentContact));
    }

    @PutMapping("/student-contact/update")
    @Operation(summary = "更新学生联系人")
    @PreAuthorize("@ss.hasPermission('infra:student:update')")
    public CommonResult<Boolean> updateStudentContact(@Valid @RequestBody InfraStudentContactDO studentContact) {
        studentService.updateStudentContact(studentContact);
        return success(true);
    }

    @DeleteMapping("/student-contact/delete")
    @Parameter(name = "id", description = "编号", required = true)
    @Operation(summary = "删除学生联系人")
    @PreAuthorize("@ss.hasPermission('infra:student:delete')")
    public CommonResult<Boolean> deleteStudentContact(@RequestParam("id") Long id) {
        studentService.deleteStudentContact(id);
        return success(true);
    }

	@GetMapping("/student-contact/get")
	@Operation(summary = "获得学生联系人")
	@Parameter(name = "id", description = "编号", required = true)
    @PreAuthorize("@ss.hasPermission('infra:student:query')")
	public CommonResult<InfraStudentContactDO> getStudentContact(@RequestParam("id") Long id) {
	    return success(studentService.getStudentContact(id));
	}

    // ==================== 子表（学生班主任） ====================

    @GetMapping("/student-teacher/page")
    @Operation(summary = "获得学生班主任分页")
    @Parameter(name = "studentId", description = "学生编号")
    @PreAuthorize("@ss.hasPermission('infra:student:query')")
    public CommonResult<PageResult<InfraStudentTeacherDO>> getStudentTeacherPage(PageParam pageReqVO,
                                                                                        @RequestParam("studentId") Long studentId) {
        return success(studentService.getStudentTeacherPage(pageReqVO, studentId));
    }

    @PostMapping("/student-teacher/create")
    @Operation(summary = "创建学生班主任")
    @PreAuthorize("@ss.hasPermission('infra:student:create')")
    public CommonResult<Long> createStudentTeacher(@Valid @RequestBody InfraStudentTeacherDO studentTeacher) {
        return success(studentService.createStudentTeacher(studentTeacher));
    }

    @PutMapping("/student-teacher/update")
    @Operation(summary = "更新学生班主任")
    @PreAuthorize("@ss.hasPermission('infra:student:update')")
    public CommonResult<Boolean> updateStudentTeacher(@Valid @RequestBody InfraStudentTeacherDO studentTeacher) {
        studentService.updateStudentTeacher(studentTeacher);
        return success(true);
    }

    @DeleteMapping("/student-teacher/delete")
    @Parameter(name = "id", description = "编号", required = true)
    @Operation(summary = "删除学生班主任")
    @PreAuthorize("@ss.hasPermission('infra:student:delete')")
    public CommonResult<Boolean> deleteStudentTeacher(@RequestParam("id") Long id) {
        studentService.deleteStudentTeacher(id);
        return success(true);
    }

	@GetMapping("/student-teacher/get")
	@Operation(summary = "获得学生班主任")
	@Parameter(name = "id", description = "编号", required = true)
    @PreAuthorize("@ss.hasPermission('infra:student:query')")
	public CommonResult<InfraStudentTeacherDO> getStudentTeacher(@RequestParam("id") Long id) {
	    return success(studentService.getStudentTeacher(id));
	}

}