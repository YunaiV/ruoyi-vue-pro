/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Product.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.*;

/**
 * DeactivateProductsRequestBody
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class DeactivateProductsRequestBody {
    public static final String SERIALIZED_NAME_LISTING_PLATFORMS = "listing_platforms";
    public static final String SERIALIZED_NAME_PRODUCT_IDS = "product_ids";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("listing_platforms");
        openapiFields.add("product_ids");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_LISTING_PLATFORMS)
    private List<String> listingPlatforms = new ArrayList<>();
    @SerializedName(SERIALIZED_NAME_PRODUCT_IDS)
    private List<String> productIds = new ArrayList<>();

    public DeactivateProductsRequestBody() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to DeactivateProductsRequestBody
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!DeactivateProductsRequestBody.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in DeactivateProductsRequestBody is not found in the empty JSON string", DeactivateProductsRequestBody.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!DeactivateProductsRequestBody.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeactivateProductsRequestBody` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        // ensure the optional json data is an array if present
        if (jsonObj.get("listing_platforms") != null && !jsonObj.get("listing_platforms").isJsonNull() && !jsonObj.get("listing_platforms").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `listing_platforms` to be an array in the JSON string but got `%s`", jsonObj.get("listing_platforms").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("product_ids") != null && !jsonObj.get("product_ids").isJsonNull() && !jsonObj.get("product_ids").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `product_ids` to be an array in the JSON string but got `%s`", jsonObj.get("product_ids").toString()));
        }
    }

    /**
     * Create an instance of DeactivateProductsRequestBody given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of DeactivateProductsRequestBody
     * @throws IOException if the JSON string is invalid with respect to DeactivateProductsRequestBody
     */
    public static DeactivateProductsRequestBody fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, DeactivateProductsRequestBody.class);
    }

    public DeactivateProductsRequestBody listingPlatforms(List<String> listingPlatforms) {
        this.listingPlatforms = listingPlatforms;
        return this;
    }

    public DeactivateProductsRequestBody addListingPlatformsItem(String listingPlatformsItem) {
        if (this.listingPlatforms == null) {
            this.listingPlatforms = new ArrayList<>();
        }
        this.listingPlatforms.add(listingPlatformsItem);
        return this;
    }

    /**
     * The listing platforms where the product will be deactivated.  Possible values: - TOKOPEDIA - TIKTOK_SHOP Default: TIKTOK_SHOP  Applicable only for sellers that migrated from Tokopedia.
     *
     * @return listingPlatforms
     **/
    @javax.annotation.Nullable
    public List<String> getListingPlatforms() {
        return listingPlatforms;
    }

    public void setListingPlatforms(List<String> listingPlatforms) {
        this.listingPlatforms = listingPlatforms;
    }

    public DeactivateProductsRequestBody productIds(List<String> productIds) {
        this.productIds = productIds;
        return this;
    }

    public DeactivateProductsRequestBody addProductIdsItem(String productIdsItem) {
        if (this.productIds == null) {
            this.productIds = new ArrayList<>();
        }
        this.productIds.add(productIdsItem);
        return this;
    }

    /**
     * The product IDs to deactivate. Max number of IDs: 20.
     *
     * @return productIds
     **/
    @javax.annotation.Nullable
    public List<String> getProductIds() {
        return productIds;
    }

    public void setProductIds(List<String> productIds) {
        this.productIds = productIds;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeactivateProductsRequestBody product202309DeactivateProductsRequestBody = (DeactivateProductsRequestBody) o;
        return Objects.equals(this.listingPlatforms, product202309DeactivateProductsRequestBody.listingPlatforms) &&
            Objects.equals(this.productIds, product202309DeactivateProductsRequestBody.productIds);
    }

    @Override
    public int hashCode() {
        return Objects.hash(listingPlatforms, productIds);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeactivateProductsRequestBody {\n");
        sb.append("    listingPlatforms: ").append(toIndentedString(listingPlatforms)).append("\n");
        sb.append("    productIds: ").append(toIndentedString(productIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of DeactivateProductsRequestBody to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!DeactivateProductsRequestBody.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'DeactivateProductsRequestBody' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<DeactivateProductsRequestBody> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(DeactivateProductsRequestBody.class));

            return (TypeAdapter<T>) new TypeAdapter<DeactivateProductsRequestBody>() {
                @Override
                public void write(JsonWriter out, DeactivateProductsRequestBody value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public DeactivateProductsRequestBody read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

