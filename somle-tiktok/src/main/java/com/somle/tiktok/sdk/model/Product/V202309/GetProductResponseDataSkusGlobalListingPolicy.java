/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Product.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * GetProductResponseDataSkusGlobalListingPolicy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class GetProductResponseDataSkusGlobalListingPolicy {
    public static final String SERIALIZED_NAME_INVENTORY_TYPE = "inventory_type";
    public static final String SERIALIZED_NAME_PRICE_SYNC = "price_sync";
    public static final String SERIALIZED_NAME_REPLICATE_SOURCE = "replicate_source";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("inventory_type");
        openapiFields.add("price_sync");
        openapiFields.add("replicate_source");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_INVENTORY_TYPE)
    private String inventoryType;
    @SerializedName(SERIALIZED_NAME_PRICE_SYNC)
    private Boolean priceSync;
    @SerializedName(SERIALIZED_NAME_REPLICATE_SOURCE)
    private GetProductResponseDataSkusGlobalListingPolicyReplicateSource replicateSource;

    public GetProductResponseDataSkusGlobalListingPolicy() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to GetProductResponseDataSkusGlobalListingPolicy
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetProductResponseDataSkusGlobalListingPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in GetProductResponseDataSkusGlobalListingPolicy is not found in the empty JSON string", GetProductResponseDataSkusGlobalListingPolicy.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetProductResponseDataSkusGlobalListingPolicy.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetProductResponseDataSkusGlobalListingPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("inventory_type") != null && !jsonObj.get("inventory_type").isJsonNull()) && !jsonObj.get("inventory_type").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `inventory_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inventory_type").toString()));
        }
        // validate the optional field `replicate_source`
        if (jsonObj.get("replicate_source") != null && !jsonObj.get("replicate_source").isJsonNull()) {
            GetProductResponseDataSkusGlobalListingPolicyReplicateSource.validateJsonElement(jsonObj.get("replicate_source"));
        }
    }

    /**
     * Create an instance of GetProductResponseDataSkusGlobalListingPolicy given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetProductResponseDataSkusGlobalListingPolicy
     * @throws IOException if the JSON string is invalid with respect to GetProductResponseDataSkusGlobalListingPolicy
     */
    public static GetProductResponseDataSkusGlobalListingPolicy fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, GetProductResponseDataSkusGlobalListingPolicy.class);
    }

    public GetProductResponseDataSkusGlobalListingPolicy inventoryType(String inventoryType) {
        this.inventoryType = inventoryType;
        return this;
    }

    /**
     * The type of inventory to synchronize. Possible values: - SHARED: Inventory Area Sharing - EXCLUSIVE: Inventory Exclusive
     *
     * @return inventoryType
     **/
    @javax.annotation.Nullable
    public String getInventoryType() {
        return inventoryType;
    }

    public void setInventoryType(String inventoryType) {
        this.inventoryType = inventoryType;
    }

    public GetProductResponseDataSkusGlobalListingPolicy priceSync(Boolean priceSync) {
        this.priceSync = priceSync;
        return this;
    }

    /**
     * A flag indicating whether the product price is synchronized.
     *
     * @return priceSync
     **/
    @javax.annotation.Nullable
    public Boolean getPriceSync() {
        return priceSync;
    }

    public void setPriceSync(Boolean priceSync) {
        this.priceSync = priceSync;
    }

    public GetProductResponseDataSkusGlobalListingPolicy replicateSource(GetProductResponseDataSkusGlobalListingPolicyReplicateSource replicateSource) {
        this.replicateSource = replicateSource;
        return this;
    }

    /**
     * Get replicateSource
     *
     * @return replicateSource
     **/
    @javax.annotation.Nullable
    public GetProductResponseDataSkusGlobalListingPolicyReplicateSource getReplicateSource() {
        return replicateSource;
    }

    public void setReplicateSource(GetProductResponseDataSkusGlobalListingPolicyReplicateSource replicateSource) {
        this.replicateSource = replicateSource;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetProductResponseDataSkusGlobalListingPolicy product202309GetProductResponseDataSkusGlobalListingPolicy = (GetProductResponseDataSkusGlobalListingPolicy) o;
        return Objects.equals(this.inventoryType, product202309GetProductResponseDataSkusGlobalListingPolicy.inventoryType) &&
            Objects.equals(this.priceSync, product202309GetProductResponseDataSkusGlobalListingPolicy.priceSync) &&
            Objects.equals(this.replicateSource, product202309GetProductResponseDataSkusGlobalListingPolicy.replicateSource);
    }

    @Override
    public int hashCode() {
        return Objects.hash(inventoryType, priceSync, replicateSource);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetProductResponseDataSkusGlobalListingPolicy {\n");
        sb.append("    inventoryType: ").append(toIndentedString(inventoryType)).append("\n");
        sb.append("    priceSync: ").append(toIndentedString(priceSync)).append("\n");
        sb.append("    replicateSource: ").append(toIndentedString(replicateSource)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of GetProductResponseDataSkusGlobalListingPolicy to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetProductResponseDataSkusGlobalListingPolicy.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'GetProductResponseDataSkusGlobalListingPolicy' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetProductResponseDataSkusGlobalListingPolicy> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(GetProductResponseDataSkusGlobalListingPolicy.class));

            return (TypeAdapter<T>) new TypeAdapter<GetProductResponseDataSkusGlobalListingPolicy>() {
                @Override
                public void write(JsonWriter out, GetProductResponseDataSkusGlobalListingPolicy value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public GetProductResponseDataSkusGlobalListingPolicy read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

