/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Product.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.*;

/**
 * UpdatePriceRequestBodySkus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class UpdatePriceRequestBodySkus {
    public static final String SERIALIZED_NAME_EXTERNAL_LIST_PRICES = "external_list_prices";
    public static final String SERIALIZED_NAME_ID = "id";
    public static final String SERIALIZED_NAME_LIST_PRICE = "list_price";
    public static final String SERIALIZED_NAME_PRICE = "price";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("external_list_prices");
        openapiFields.add("id");
        openapiFields.add("list_price");
        openapiFields.add("price");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_EXTERNAL_LIST_PRICES)
    private List<UpdatePriceRequestBodySkusExternalListPrices> externalListPrices = new ArrayList<>();
    @SerializedName(SERIALIZED_NAME_ID)
    private String id;
    @SerializedName(SERIALIZED_NAME_LIST_PRICE)
    private UpdatePriceRequestBodySkusListPrice listPrice;
    @SerializedName(SERIALIZED_NAME_PRICE)
    private UpdatePriceRequestBodySkusPrice price;

    public UpdatePriceRequestBodySkus() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to UpdatePriceRequestBodySkus
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!UpdatePriceRequestBodySkus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in UpdatePriceRequestBodySkus is not found in the empty JSON string", UpdatePriceRequestBodySkus.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!UpdatePriceRequestBodySkus.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdatePriceRequestBodySkus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if (jsonObj.get("external_list_prices") != null && !jsonObj.get("external_list_prices").isJsonNull()) {
            JsonArray jsonArrayexternalListPrices = jsonObj.getAsJsonArray("external_list_prices");
            if (jsonArrayexternalListPrices != null) {
                // ensure the json data is an array
                if (!jsonObj.get("external_list_prices").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `external_list_prices` to be an array in the JSON string but got `%s`", jsonObj.get("external_list_prices").toString()));
                }

                // validate the optional field `external_list_prices` (array)
                for (int i = 0; i < jsonArrayexternalListPrices.size(); i++) {
                    UpdatePriceRequestBodySkusExternalListPrices.validateJsonElement(jsonArrayexternalListPrices.get(i));
                }
                ;
            }
        }
        if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
        }
        // validate the optional field `list_price`
        if (jsonObj.get("list_price") != null && !jsonObj.get("list_price").isJsonNull()) {
            UpdatePriceRequestBodySkusListPrice.validateJsonElement(jsonObj.get("list_price"));
        }
        // validate the optional field `price`
        if (jsonObj.get("price") != null && !jsonObj.get("price").isJsonNull()) {
            UpdatePriceRequestBodySkusPrice.validateJsonElement(jsonObj.get("price"));
        }
    }

    /**
     * Create an instance of UpdatePriceRequestBodySkus given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of UpdatePriceRequestBodySkus
     * @throws IOException if the JSON string is invalid with respect to UpdatePriceRequestBodySkus
     */
    public static UpdatePriceRequestBodySkus fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, UpdatePriceRequestBodySkus.class);
    }

    public UpdatePriceRequestBodySkus externalListPrices(List<UpdatePriceRequestBodySkusExternalListPrices> externalListPrices) {
        this.externalListPrices = externalListPrices;
        return this;
    }

    public UpdatePriceRequestBodySkus addExternalListPricesItem(UpdatePriceRequestBodySkusExternalListPrices externalListPricesItem) {
        if (this.externalListPrices == null) {
            this.externalListPrices = new ArrayList<>();
        }
        this.externalListPrices.add(externalListPricesItem);
        return this;
    }

    /**
     * The SKU list price (e.g. MSRP, RRP) or original price information on external ecommerce platforms. Applicable only for selected sellers in the US market.  **Note**: This value may appear as the strikethrough price on the product page. However, whether the strikethrough price is shown and the amount shown are subject to the audit team&#39;s review and decision based on various pricing information.
     *
     * @return externalListPrices
     **/
    @javax.annotation.Nullable
    public List<UpdatePriceRequestBodySkusExternalListPrices> getExternalListPrices() {
        return externalListPrices;
    }

    public void setExternalListPrices(List<UpdatePriceRequestBodySkusExternalListPrices> externalListPrices) {
        this.externalListPrices = externalListPrices;
    }

    public UpdatePriceRequestBodySkus id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The SKU ID generated by TikTok Shop. One product can contain multiple SKU IDs.  **Note**:  - The SKU ID must belong to a product with the &#x60;ACTIVATE&#x60; status. - If you are updating multiple SKUs, all the SKU IDs must belong to the same product.
     *
     * @return id
     **/
    @javax.annotation.Nullable
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public UpdatePriceRequestBodySkus listPrice(UpdatePriceRequestBodySkusListPrice listPrice) {
        this.listPrice = listPrice;
        return this;
    }

    /**
     * Get listPrice
     *
     * @return listPrice
     **/
    @javax.annotation.Nullable
    public UpdatePriceRequestBodySkusListPrice getListPrice() {
        return listPrice;
    }

    public void setListPrice(UpdatePriceRequestBodySkusListPrice listPrice) {
        this.listPrice = listPrice;
    }

    public UpdatePriceRequestBodySkus price(UpdatePriceRequestBodySkusPrice price) {
        this.price = price;
        return this;
    }

    /**
     * Get price
     *
     * @return price
     **/
    @javax.annotation.Nullable
    public UpdatePriceRequestBodySkusPrice getPrice() {
        return price;
    }

    public void setPrice(UpdatePriceRequestBodySkusPrice price) {
        this.price = price;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdatePriceRequestBodySkus product202309UpdatePriceRequestBodySkus = (UpdatePriceRequestBodySkus) o;
        return Objects.equals(this.externalListPrices, product202309UpdatePriceRequestBodySkus.externalListPrices) &&
            Objects.equals(this.id, product202309UpdatePriceRequestBodySkus.id) &&
            Objects.equals(this.listPrice, product202309UpdatePriceRequestBodySkus.listPrice) &&
            Objects.equals(this.price, product202309UpdatePriceRequestBodySkus.price);
    }

    @Override
    public int hashCode() {
        return Objects.hash(externalListPrices, id, listPrice, price);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UpdatePriceRequestBodySkus {\n");
        sb.append("    externalListPrices: ").append(toIndentedString(externalListPrices)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    listPrice: ").append(toIndentedString(listPrice)).append("\n");
        sb.append("    price: ").append(toIndentedString(price)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of UpdatePriceRequestBodySkus to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!UpdatePriceRequestBodySkus.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'UpdatePriceRequestBodySkus' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<UpdatePriceRequestBodySkus> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(UpdatePriceRequestBodySkus.class));

            return (TypeAdapter<T>) new TypeAdapter<UpdatePriceRequestBodySkus>() {
                @Override
                public void write(JsonWriter out, UpdatePriceRequestBodySkus value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public UpdatePriceRequestBodySkus read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

