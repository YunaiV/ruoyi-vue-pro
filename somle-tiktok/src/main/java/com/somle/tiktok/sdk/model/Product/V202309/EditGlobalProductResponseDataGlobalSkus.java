/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Product.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.*;

/**
 * EditGlobalProductResponseDataGlobalSkus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class EditGlobalProductResponseDataGlobalSkus {
    public static final String SERIALIZED_NAME_EXTERNAL_GLOBAL_SKU_ID = "external_global_sku_id";
    public static final String SERIALIZED_NAME_ID = "id";
    public static final String SERIALIZED_NAME_SALES_ATTRIBUTES = "sales_attributes";
    public static final String SERIALIZED_NAME_SELLER_SKU = "seller_sku";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("external_global_sku_id");
        openapiFields.add("id");
        openapiFields.add("sales_attributes");
        openapiFields.add("seller_sku");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_EXTERNAL_GLOBAL_SKU_ID)
    private String externalGlobalSkuId;
    @SerializedName(SERIALIZED_NAME_ID)
    private String id;
    @SerializedName(SERIALIZED_NAME_SALES_ATTRIBUTES)
    private List<EditGlobalProductResponseDataGlobalSkusSalesAttributes> salesAttributes = new ArrayList<>();
    @SerializedName(SERIALIZED_NAME_SELLER_SKU)
    private String sellerSku;

    public EditGlobalProductResponseDataGlobalSkus() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to EditGlobalProductResponseDataGlobalSkus
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!EditGlobalProductResponseDataGlobalSkus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in EditGlobalProductResponseDataGlobalSkus is not found in the empty JSON string", EditGlobalProductResponseDataGlobalSkus.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!EditGlobalProductResponseDataGlobalSkus.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EditGlobalProductResponseDataGlobalSkus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("external_global_sku_id") != null && !jsonObj.get("external_global_sku_id").isJsonNull()) && !jsonObj.get("external_global_sku_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `external_global_sku_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_global_sku_id").toString()));
        }
        if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
        }
        if (jsonObj.get("sales_attributes") != null && !jsonObj.get("sales_attributes").isJsonNull()) {
            JsonArray jsonArraysalesAttributes = jsonObj.getAsJsonArray("sales_attributes");
            if (jsonArraysalesAttributes != null) {
                // ensure the json data is an array
                if (!jsonObj.get("sales_attributes").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `sales_attributes` to be an array in the JSON string but got `%s`", jsonObj.get("sales_attributes").toString()));
                }

                // validate the optional field `sales_attributes` (array)
                for (int i = 0; i < jsonArraysalesAttributes.size(); i++) {
                    EditGlobalProductResponseDataGlobalSkusSalesAttributes.validateJsonElement(jsonArraysalesAttributes.get(i));
                }
                ;
            }
        }
        if ((jsonObj.get("seller_sku") != null && !jsonObj.get("seller_sku").isJsonNull()) && !jsonObj.get("seller_sku").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `seller_sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seller_sku").toString()));
        }
    }

    /**
     * Create an instance of EditGlobalProductResponseDataGlobalSkus given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of EditGlobalProductResponseDataGlobalSkus
     * @throws IOException if the JSON string is invalid with respect to EditGlobalProductResponseDataGlobalSkus
     */
    public static EditGlobalProductResponseDataGlobalSkus fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, EditGlobalProductResponseDataGlobalSkus.class);
    }

    public EditGlobalProductResponseDataGlobalSkus externalGlobalSkuId(String externalGlobalSkuId) {
        this.externalGlobalSkuId = externalGlobalSkuId;
        return this;
    }

    /**
     * An external identifier used in an external ecommerce platform. This is used to associate the global SKU between TikTok Shop and the external ecommerce platform.  Max length: 999 characters
     *
     * @return externalGlobalSkuId
     **/
    @javax.annotation.Nullable
    public String getExternalGlobalSkuId() {
        return externalGlobalSkuId;
    }

    public void setExternalGlobalSkuId(String externalGlobalSkuId) {
        this.externalGlobalSkuId = externalGlobalSkuId;
    }

    public EditGlobalProductResponseDataGlobalSkus id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The global SKU ID generated by TikTok Shop. One product can contain multiple SKU IDs.
     *
     * @return id
     **/
    @javax.annotation.Nullable
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public EditGlobalProductResponseDataGlobalSkus salesAttributes(List<EditGlobalProductResponseDataGlobalSkusSalesAttributes> salesAttributes) {
        this.salesAttributes = salesAttributes;
        return this;
    }

    public EditGlobalProductResponseDataGlobalSkus addSalesAttributesItem(EditGlobalProductResponseDataGlobalSkusSalesAttributes salesAttributesItem) {
        if (this.salesAttributes == null) {
            this.salesAttributes = new ArrayList<>();
        }
        this.salesAttributes.add(salesAttributesItem);
        return this;
    }

    /**
     * A list of attributes  (e.g. size, color, length) that define each variant of a product.
     *
     * @return salesAttributes
     **/
    @javax.annotation.Nullable
    public List<EditGlobalProductResponseDataGlobalSkusSalesAttributes> getSalesAttributes() {
        return salesAttributes;
    }

    public void setSalesAttributes(List<EditGlobalProductResponseDataGlobalSkusSalesAttributes> salesAttributes) {
        this.salesAttributes = salesAttributes;
    }

    public EditGlobalProductResponseDataGlobalSkus sellerSku(String sellerSku) {
        this.sellerSku = sellerSku;
        return this;
    }

    /**
     * An internal code/name for managing SKUs, not visible to buyers.
     *
     * @return sellerSku
     **/
    @javax.annotation.Nullable
    public String getSellerSku() {
        return sellerSku;
    }

    public void setSellerSku(String sellerSku) {
        this.sellerSku = sellerSku;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EditGlobalProductResponseDataGlobalSkus product202309EditGlobalProductResponseDataGlobalSkus = (EditGlobalProductResponseDataGlobalSkus) o;
        return Objects.equals(this.externalGlobalSkuId, product202309EditGlobalProductResponseDataGlobalSkus.externalGlobalSkuId) &&
            Objects.equals(this.id, product202309EditGlobalProductResponseDataGlobalSkus.id) &&
            Objects.equals(this.salesAttributes, product202309EditGlobalProductResponseDataGlobalSkus.salesAttributes) &&
            Objects.equals(this.sellerSku, product202309EditGlobalProductResponseDataGlobalSkus.sellerSku);
    }

    @Override
    public int hashCode() {
        return Objects.hash(externalGlobalSkuId, id, salesAttributes, sellerSku);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EditGlobalProductResponseDataGlobalSkus {\n");
        sb.append("    externalGlobalSkuId: ").append(toIndentedString(externalGlobalSkuId)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    salesAttributes: ").append(toIndentedString(salesAttributes)).append("\n");
        sb.append("    sellerSku: ").append(toIndentedString(sellerSku)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of EditGlobalProductResponseDataGlobalSkus to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!EditGlobalProductResponseDataGlobalSkus.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'EditGlobalProductResponseDataGlobalSkus' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<EditGlobalProductResponseDataGlobalSkus> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(EditGlobalProductResponseDataGlobalSkus.class));

            return (TypeAdapter<T>) new TypeAdapter<EditGlobalProductResponseDataGlobalSkus>() {
                @Override
                public void write(JsonWriter out, EditGlobalProductResponseDataGlobalSkus value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public EditGlobalProductResponseDataGlobalSkus read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

