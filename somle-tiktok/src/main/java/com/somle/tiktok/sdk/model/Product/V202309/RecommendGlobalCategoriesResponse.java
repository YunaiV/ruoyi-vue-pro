/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Product.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * RecommendGlobalCategoriesResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class RecommendGlobalCategoriesResponse {
    public static final String SERIALIZED_NAME_CODE = "code";
    public static final String SERIALIZED_NAME_DATA = "data";
    public static final String SERIALIZED_NAME_MESSAGE = "message";
    public static final String SERIALIZED_NAME_REQUEST_ID = "request_id";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("code");
        openapiFields.add("data");
        openapiFields.add("message");
        openapiFields.add("request_id");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_CODE)
    private Integer code;
    @SerializedName(SERIALIZED_NAME_DATA)
    private RecommendGlobalCategoriesResponseData data;
    @SerializedName(SERIALIZED_NAME_MESSAGE)
    private String message;
    @SerializedName(SERIALIZED_NAME_REQUEST_ID)
    private String requestId;

    public RecommendGlobalCategoriesResponse() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to RecommendGlobalCategoriesResponse
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!RecommendGlobalCategoriesResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in RecommendGlobalCategoriesResponse is not found in the empty JSON string", RecommendGlobalCategoriesResponse.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!RecommendGlobalCategoriesResponse.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RecommendGlobalCategoriesResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        // validate the optional field `data`
        if (jsonObj.get("data") != null && !jsonObj.get("data").isJsonNull()) {
            RecommendGlobalCategoriesResponseData.validateJsonElement(jsonObj.get("data"));
        }
        if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
        }
        if ((jsonObj.get("request_id") != null && !jsonObj.get("request_id").isJsonNull()) && !jsonObj.get("request_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `request_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_id").toString()));
        }
    }

    /**
     * Create an instance of RecommendGlobalCategoriesResponse given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of RecommendGlobalCategoriesResponse
     * @throws IOException if the JSON string is invalid with respect to RecommendGlobalCategoriesResponse
     */
    public static RecommendGlobalCategoriesResponse fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, RecommendGlobalCategoriesResponse.class);
    }

    public RecommendGlobalCategoriesResponse code(Integer code) {
        this.code = code;
        return this;
    }

    /**
     * The success or failure status code returned in API response.
     *
     * @return code
     **/
    @javax.annotation.Nullable
    public Integer getCode() {
        return code;
    }

    public void setCode(Integer code) {
        this.code = code;
    }

    public RecommendGlobalCategoriesResponse data(RecommendGlobalCategoriesResponseData data) {
        this.data = data;
        return this;
    }

    /**
     * Get data
     *
     * @return data
     **/
    @javax.annotation.Nullable
    public RecommendGlobalCategoriesResponseData getData() {
        return data;
    }

    public void setData(RecommendGlobalCategoriesResponseData data) {
        this.data = data;
    }

    public RecommendGlobalCategoriesResponse message(String message) {
        this.message = message;
        return this;
    }

    /**
     * The success or failure messages returned in API response. Reasons of failure will be described in the message.
     *
     * @return message
     **/
    @javax.annotation.Nullable
    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public RecommendGlobalCategoriesResponse requestId(String requestId) {
        this.requestId = requestId;
        return this;
    }

    /**
     * Request log.
     *
     * @return requestId
     **/
    @javax.annotation.Nullable
    public String getRequestId() {
        return requestId;
    }

    public void setRequestId(String requestId) {
        this.requestId = requestId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RecommendGlobalCategoriesResponse product202309RecommendGlobalCategoriesResponse = (RecommendGlobalCategoriesResponse) o;
        return Objects.equals(this.code, product202309RecommendGlobalCategoriesResponse.code) &&
            Objects.equals(this.data, product202309RecommendGlobalCategoriesResponse.data) &&
            Objects.equals(this.message, product202309RecommendGlobalCategoriesResponse.message) &&
            Objects.equals(this.requestId, product202309RecommendGlobalCategoriesResponse.requestId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(code, data, message, requestId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RecommendGlobalCategoriesResponse {\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    data: ").append(toIndentedString(data)).append("\n");
        sb.append("    message: ").append(toIndentedString(message)).append("\n");
        sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of RecommendGlobalCategoriesResponse to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!RecommendGlobalCategoriesResponse.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'RecommendGlobalCategoriesResponse' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<RecommendGlobalCategoriesResponse> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(RecommendGlobalCategoriesResponse.class));

            return (TypeAdapter<T>) new TypeAdapter<RecommendGlobalCategoriesResponse>() {
                @Override
                public void write(JsonWriter out, RecommendGlobalCategoriesResponse value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public RecommendGlobalCategoriesResponse read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

