/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Product.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.*;

/**
 * GetProductResponseDataGlobalProductAssociationSkuMappings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class GetProductResponseDataGlobalProductAssociationSkuMappings {
    public static final String SERIALIZED_NAME_GLOBAL_SKU_ID = "global_sku_id";
    public static final String SERIALIZED_NAME_LOCAL_SKU_ID = "local_sku_id";
    public static final String SERIALIZED_NAME_SALES_ATTRIBUTE_MAPPINGS = "sales_attribute_mappings";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("global_sku_id");
        openapiFields.add("local_sku_id");
        openapiFields.add("sales_attribute_mappings");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_GLOBAL_SKU_ID)
    private String globalSkuId;
    @SerializedName(SERIALIZED_NAME_LOCAL_SKU_ID)
    private String localSkuId;
    @SerializedName(SERIALIZED_NAME_SALES_ATTRIBUTE_MAPPINGS)
    private List<GetProductResponseDataGlobalProductAssociationSkuMappingsSalesAttributeMappings> salesAttributeMappings = new ArrayList<>();

    public GetProductResponseDataGlobalProductAssociationSkuMappings() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to GetProductResponseDataGlobalProductAssociationSkuMappings
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetProductResponseDataGlobalProductAssociationSkuMappings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in GetProductResponseDataGlobalProductAssociationSkuMappings is not found in the empty JSON string", GetProductResponseDataGlobalProductAssociationSkuMappings.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetProductResponseDataGlobalProductAssociationSkuMappings.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetProductResponseDataGlobalProductAssociationSkuMappings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("global_sku_id") != null && !jsonObj.get("global_sku_id").isJsonNull()) && !jsonObj.get("global_sku_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `global_sku_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("global_sku_id").toString()));
        }
        if ((jsonObj.get("local_sku_id") != null && !jsonObj.get("local_sku_id").isJsonNull()) && !jsonObj.get("local_sku_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `local_sku_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("local_sku_id").toString()));
        }
        if (jsonObj.get("sales_attribute_mappings") != null && !jsonObj.get("sales_attribute_mappings").isJsonNull()) {
            JsonArray jsonArraysalesAttributeMappings = jsonObj.getAsJsonArray("sales_attribute_mappings");
            if (jsonArraysalesAttributeMappings != null) {
                // ensure the json data is an array
                if (!jsonObj.get("sales_attribute_mappings").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `sales_attribute_mappings` to be an array in the JSON string but got `%s`", jsonObj.get("sales_attribute_mappings").toString()));
                }

                // validate the optional field `sales_attribute_mappings` (array)
                for (int i = 0; i < jsonArraysalesAttributeMappings.size(); i++) {
                    GetProductResponseDataGlobalProductAssociationSkuMappingsSalesAttributeMappings.validateJsonElement(jsonArraysalesAttributeMappings.get(i));
                }
                ;
            }
        }
    }

    /**
     * Create an instance of GetProductResponseDataGlobalProductAssociationSkuMappings given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetProductResponseDataGlobalProductAssociationSkuMappings
     * @throws IOException if the JSON string is invalid with respect to GetProductResponseDataGlobalProductAssociationSkuMappings
     */
    public static GetProductResponseDataGlobalProductAssociationSkuMappings fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, GetProductResponseDataGlobalProductAssociationSkuMappings.class);
    }

    public GetProductResponseDataGlobalProductAssociationSkuMappings globalSkuId(String globalSkuId) {
        this.globalSkuId = globalSkuId;
        return this;
    }

    /**
     * The global SKU ID in TikTok Shop.
     *
     * @return globalSkuId
     **/
    @javax.annotation.Nullable
    public String getGlobalSkuId() {
        return globalSkuId;
    }

    public void setGlobalSkuId(String globalSkuId) {
        this.globalSkuId = globalSkuId;
    }

    public GetProductResponseDataGlobalProductAssociationSkuMappings localSkuId(String localSkuId) {
        this.localSkuId = localSkuId;
        return this;
    }

    /**
     * The local SKU ID in TikTok Shop.
     *
     * @return localSkuId
     **/
    @javax.annotation.Nullable
    public String getLocalSkuId() {
        return localSkuId;
    }

    public void setLocalSkuId(String localSkuId) {
        this.localSkuId = localSkuId;
    }

    public GetProductResponseDataGlobalProductAssociationSkuMappings salesAttributeMappings(List<GetProductResponseDataGlobalProductAssociationSkuMappingsSalesAttributeMappings> salesAttributeMappings) {
        this.salesAttributeMappings = salesAttributeMappings;
        return this;
    }

    public GetProductResponseDataGlobalProductAssociationSkuMappings addSalesAttributeMappingsItem(GetProductResponseDataGlobalProductAssociationSkuMappingsSalesAttributeMappings salesAttributeMappingsItem) {
        if (this.salesAttributeMappings == null) {
            this.salesAttributeMappings = new ArrayList<>();
        }
        this.salesAttributeMappings.add(salesAttributeMappingsItem);
        return this;
    }

    /**
     * The list of sales attribute mappings between the global and local SKUs.
     *
     * @return salesAttributeMappings
     **/
    @javax.annotation.Nullable
    public List<GetProductResponseDataGlobalProductAssociationSkuMappingsSalesAttributeMappings> getSalesAttributeMappings() {
        return salesAttributeMappings;
    }

    public void setSalesAttributeMappings(List<GetProductResponseDataGlobalProductAssociationSkuMappingsSalesAttributeMappings> salesAttributeMappings) {
        this.salesAttributeMappings = salesAttributeMappings;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetProductResponseDataGlobalProductAssociationSkuMappings product202309GetProductResponseDataGlobalProductAssociationSkuMappings = (GetProductResponseDataGlobalProductAssociationSkuMappings) o;
        return Objects.equals(this.globalSkuId, product202309GetProductResponseDataGlobalProductAssociationSkuMappings.globalSkuId) &&
            Objects.equals(this.localSkuId, product202309GetProductResponseDataGlobalProductAssociationSkuMappings.localSkuId) &&
            Objects.equals(this.salesAttributeMappings, product202309GetProductResponseDataGlobalProductAssociationSkuMappings.salesAttributeMappings);
    }

    @Override
    public int hashCode() {
        return Objects.hash(globalSkuId, localSkuId, salesAttributeMappings);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetProductResponseDataGlobalProductAssociationSkuMappings {\n");
        sb.append("    globalSkuId: ").append(toIndentedString(globalSkuId)).append("\n");
        sb.append("    localSkuId: ").append(toIndentedString(localSkuId)).append("\n");
        sb.append("    salesAttributeMappings: ").append(toIndentedString(salesAttributeMappings)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of GetProductResponseDataGlobalProductAssociationSkuMappings to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetProductResponseDataGlobalProductAssociationSkuMappings.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'GetProductResponseDataGlobalProductAssociationSkuMappings' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetProductResponseDataGlobalProductAssociationSkuMappings> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(GetProductResponseDataGlobalProductAssociationSkuMappings.class));

            return (TypeAdapter<T>) new TypeAdapter<GetProductResponseDataGlobalProductAssociationSkuMappings>() {
                @Override
                public void write(JsonWriter out, GetProductResponseDataGlobalProductAssociationSkuMappings value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public GetProductResponseDataGlobalProductAssociationSkuMappings read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

