/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Order.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.*;


/**
 * GetOrderListRequestBody
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class GetOrderListRequestBody {
    public static final String SERIALIZED_NAME_BUYER_USER_ID = "buyer_user_id";
    public static final String SERIALIZED_NAME_CREATE_TIME_GE = "create_time_ge";
    public static final String SERIALIZED_NAME_CREATE_TIME_LT = "create_time_lt";
    public static final String SERIALIZED_NAME_IS_BUYER_REQUEST_CANCEL = "is_buyer_request_cancel";
    public static final String SERIALIZED_NAME_ORDER_STATUS = "order_status";
    public static final String SERIALIZED_NAME_SHIPPING_TYPE = "shipping_type";
    public static final String SERIALIZED_NAME_UPDATE_TIME_GE = "update_time_ge";
    public static final String SERIALIZED_NAME_UPDATE_TIME_LT = "update_time_lt";
    public static final String SERIALIZED_NAME_WAREHOUSE_IDS = "warehouse_ids";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("buyer_user_id");
        openapiFields.add("create_time_ge");
        openapiFields.add("create_time_lt");
        openapiFields.add("is_buyer_request_cancel");
        openapiFields.add("order_status");
        openapiFields.add("shipping_type");
        openapiFields.add("update_time_ge");
        openapiFields.add("update_time_lt");
        openapiFields.add("warehouse_ids");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_BUYER_USER_ID)
    private String buyerUserId;
    @SerializedName(SERIALIZED_NAME_CREATE_TIME_GE)
    private Long createTimeGe;
    @SerializedName(SERIALIZED_NAME_CREATE_TIME_LT)
    private Long createTimeLt;
    @SerializedName(SERIALIZED_NAME_IS_BUYER_REQUEST_CANCEL)
    private Boolean isBuyerRequestCancel;
    @SerializedName(SERIALIZED_NAME_ORDER_STATUS)
    private String orderStatus;
    @SerializedName(SERIALIZED_NAME_SHIPPING_TYPE)
    private String shippingType;
    @SerializedName(SERIALIZED_NAME_UPDATE_TIME_GE)
    private Long updateTimeGe;
    @SerializedName(SERIALIZED_NAME_UPDATE_TIME_LT)
    private Long updateTimeLt;
    @SerializedName(SERIALIZED_NAME_WAREHOUSE_IDS)
    private List<String> warehouseIds = new ArrayList<>();

    public GetOrderListRequestBody() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to GetOrderListRequestBody
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetOrderListRequestBody.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in GetOrderListRequestBody is not found in the empty JSON string", GetOrderListRequestBody.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetOrderListRequestBody.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOrderListRequestBody` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("buyer_user_id") != null && !jsonObj.get("buyer_user_id").isJsonNull()) && !jsonObj.get("buyer_user_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `buyer_user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_user_id").toString()));
        }
        if ((jsonObj.get("order_status") != null && !jsonObj.get("order_status").isJsonNull()) && !jsonObj.get("order_status").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `order_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_status").toString()));
        }
        if ((jsonObj.get("shipping_type") != null && !jsonObj.get("shipping_type").isJsonNull()) && !jsonObj.get("shipping_type").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `shipping_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_type").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("warehouse_ids") != null && !jsonObj.get("warehouse_ids").isJsonNull() && !jsonObj.get("warehouse_ids").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `warehouse_ids` to be an array in the JSON string but got `%s`", jsonObj.get("warehouse_ids").toString()));
        }
    }

    /**
     * Create an instance of GetOrderListRequestBody given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetOrderListRequestBody
     * @throws IOException if the JSON string is invalid with respect to GetOrderListRequestBody
     */
    public static GetOrderListRequestBody fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, GetOrderListRequestBody.class);
    }

    public GetOrderListRequestBody buyerUserId(String buyerUserId) {
        this.buyerUserId = buyerUserId;
        return this;
    }

    /**
     * Buyer user ID.
     *
     * @return buyerUserId
     **/
    @javax.annotation.Nullable
    public String getBuyerUserId() {
        return buyerUserId;
    }

    public void setBuyerUserId(String buyerUserId) {
        this.buyerUserId = buyerUserId;
    }

    public GetOrderListRequestBody createTimeGe(Long createTimeGe) {
        this.createTimeGe = createTimeGe;
        return this;
    }

    /**
     * Filter orders to show only those that are created on or after the specified date and time. Unix timestamp.  Note: &#x60;create_time_ge&#x60; and &#x60;create_time_le&#x60; together constitute the creation time filter condition. - If &#x60;create_time_ge&#x60; is filled but &#x60;create_time_le&#x60; is empty, &#x60;create_time_le&#x60; will default to the current time. - If &#x60;create_time_le&#x60; is filled but &#x60;create_time_ge&#x60; is empty, &#x60;create_time_ge&#x60; will default to the earliest shop time.
     *
     * @return createTimeGe
     **/
    @javax.annotation.Nullable
    public Long getCreateTimeGe() {
        return createTimeGe;
    }

    public void setCreateTimeGe(Long createTimeGe) {
        this.createTimeGe = createTimeGe;
    }

    public GetOrderListRequestBody createTimeLt(Long createTimeLt) {
        this.createTimeLt = createTimeLt;
        return this;
    }

    /**
     * Filter orders to show only those that are created before the specified date and time. Unix timestamp. Refer to notes in &#x60;create_time_ge&#x60; for more usage information.
     *
     * @return createTimeLt
     **/
    @javax.annotation.Nullable
    public Long getCreateTimeLt() {
        return createTimeLt;
    }

    public void setCreateTimeLt(Long createTimeLt) {
        this.createTimeLt = createTimeLt;
    }

    public GetOrderListRequestBody isBuyerRequestCancel(Boolean isBuyerRequestCancel) {
        this.isBuyerRequestCancel = isBuyerRequestCancel;
        return this;
    }

    /**
     * Whether the buyer has initiated an order cancellation request.
     *
     * @return isBuyerRequestCancel
     **/
    @javax.annotation.Nullable
    public Boolean getIsBuyerRequestCancel() {
        return isBuyerRequestCancel;
    }

    public void setIsBuyerRequestCancel(Boolean isBuyerRequestCancel) {
        this.isBuyerRequestCancel = isBuyerRequestCancel;
    }

    public GetOrderListRequestBody orderStatus(String orderStatus) {
        this.orderStatus = orderStatus;
        return this;
    }

    /**
     * Specific order status. Available values: - &#x60;UNPAID&#x60;: The order has been placed, but payment has not been completed. - &#x60;ON_HOLD&#x60;: The order has been accepted and is awaiting fulfillment. The buyer may still cancel without the sellerâ€™s approval. If &#x60;order_type&#x3D;PRE_ORDER&#x60;, the product is still awaiting release so payment will only be authorized 1 day before the release, but the seller should start preparing for the release. - &#x60;AWAITING_SHIPMENT&#x60;: The order is ready to be shipped, but no items have been shipped yet. - &#x60;PARTIALLY_SHIPPING&#x60;: Some items in the order have been shipped, but not all. - &#x60;AWAITING_COLLECTION&#x60;: Shipping has been arranged, but the package is waiting to be collected by the carrier. - &#x60;IN_TRANSIT&#x60;: The package has been collected by the carrier and delivery is in progress. - &#x60;DELIVERED&#x60;: The package has been delivered to the buyer. - &#x60;COMPLETED&#x60;: The order has been completed, and no further returns or refunds are allowed. - &#x60;CANCELLED&#x60;: The order has been cancelled.
     *
     * @return orderStatus
     **/
    @javax.annotation.Nullable
    public String getOrderStatus() {
        return orderStatus;
    }

    public void setOrderStatus(String orderStatus) {
        this.orderStatus = orderStatus;
    }

    public GetOrderListRequestBody shippingType(String shippingType) {
        this.shippingType = shippingType;
        return this;
    }

    /**
     * The delivery method. - &#x60;TIKTOK&#x60;: Shipping service provided by TikTok. The seller should obtain a shipping label from TikTok. - &#x60;SELLER&#x60;: Seller provides shipping, including through 3rd party fulfillment providers on behalf of the seller.
     *
     * @return shippingType
     **/
    @javax.annotation.Nullable
    public String getShippingType() {
        return shippingType;
    }

    public void setShippingType(String shippingType) {
        this.shippingType = shippingType;
    }

    public GetOrderListRequestBody updateTimeGe(Long updateTimeGe) {
        this.updateTimeGe = updateTimeGe;
        return this;
    }

    /**
     * Filter orders to show only those that are updated on or after the specified date and time. Unix timestamp.  Note: &#x60;update_time_ge&#x60; and &#x60;update_time_le&#x60; together define the update time filter condition. - If &#x60;update_time_ge&#x60; is filled but &#x60;update_time_le&#x60; is empty, &#x60;update_time_le&#x60; will default to the current time. - If &#x60;update_time_le&#x60; is filled but &#x60;update_time_ge&#x60; is empty, &#x60;update_time_ge&#x60; will default to the earliest shop time.
     *
     * @return updateTimeGe
     **/
    @javax.annotation.Nullable
    public Long getUpdateTimeGe() {
        return updateTimeGe;
    }

    public void setUpdateTimeGe(Long updateTimeGe) {
        this.updateTimeGe = updateTimeGe;
    }

    public GetOrderListRequestBody updateTimeLt(Long updateTimeLt) {
        this.updateTimeLt = updateTimeLt;
        return this;
    }

    /**
     * Filter orders to show only those that are updated before the specified date and time. Unix timestamp. Refer to notes in &#x60;update_time_ge&#x60; for more usage information.
     *
     * @return updateTimeLt
     **/
    @javax.annotation.Nullable
    public Long getUpdateTimeLt() {
        return updateTimeLt;
    }

    public void setUpdateTimeLt(Long updateTimeLt) {
        this.updateTimeLt = updateTimeLt;
    }

    public GetOrderListRequestBody warehouseIds(List<String> warehouseIds) {
        this.warehouseIds = warehouseIds;
        return this;
    }

    public GetOrderListRequestBody addWarehouseIdsItem(String warehouseIdsItem) {
        if (this.warehouseIds == null) {
            this.warehouseIds = new ArrayList<>();
        }
        this.warehouseIds.add(warehouseIdsItem);
        return this;
    }

    /**
     * Filter orders by pickup/sales warehouse IDs. Applicable only if the multi-warehouse feature is enabled. Max count: 100
     *
     * @return warehouseIds
     **/
    @javax.annotation.Nullable
    public List<String> getWarehouseIds() {
        return warehouseIds;
    }

    public void setWarehouseIds(List<String> warehouseIds) {
        this.warehouseIds = warehouseIds;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetOrderListRequestBody order202309GetOrderListRequestBody = (GetOrderListRequestBody) o;
        return Objects.equals(this.buyerUserId, order202309GetOrderListRequestBody.buyerUserId) &&
            Objects.equals(this.createTimeGe, order202309GetOrderListRequestBody.createTimeGe) &&
            Objects.equals(this.createTimeLt, order202309GetOrderListRequestBody.createTimeLt) &&
            Objects.equals(this.isBuyerRequestCancel, order202309GetOrderListRequestBody.isBuyerRequestCancel) &&
            Objects.equals(this.orderStatus, order202309GetOrderListRequestBody.orderStatus) &&
            Objects.equals(this.shippingType, order202309GetOrderListRequestBody.shippingType) &&
            Objects.equals(this.updateTimeGe, order202309GetOrderListRequestBody.updateTimeGe) &&
            Objects.equals(this.updateTimeLt, order202309GetOrderListRequestBody.updateTimeLt) &&
            Objects.equals(this.warehouseIds, order202309GetOrderListRequestBody.warehouseIds);
    }

    @Override
    public int hashCode() {
        return Objects.hash(buyerUserId, createTimeGe, createTimeLt, isBuyerRequestCancel, orderStatus, shippingType, updateTimeGe, updateTimeLt, warehouseIds);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetOrderListRequestBody {\n");
        sb.append("    buyerUserId: ").append(toIndentedString(buyerUserId)).append("\n");
        sb.append("    createTimeGe: ").append(toIndentedString(createTimeGe)).append("\n");
        sb.append("    createTimeLt: ").append(toIndentedString(createTimeLt)).append("\n");
        sb.append("    isBuyerRequestCancel: ").append(toIndentedString(isBuyerRequestCancel)).append("\n");
        sb.append("    orderStatus: ").append(toIndentedString(orderStatus)).append("\n");
        sb.append("    shippingType: ").append(toIndentedString(shippingType)).append("\n");
        sb.append("    updateTimeGe: ").append(toIndentedString(updateTimeGe)).append("\n");
        sb.append("    updateTimeLt: ").append(toIndentedString(updateTimeLt)).append("\n");
        sb.append("    warehouseIds: ").append(toIndentedString(warehouseIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of GetOrderListRequestBody to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetOrderListRequestBody.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'GetOrderListRequestBody' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetOrderListRequestBody> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(GetOrderListRequestBody.class));

            return (TypeAdapter<T>) new TypeAdapter<GetOrderListRequestBody>() {
                @Override
                public void write(JsonWriter out, GetOrderListRequestBody value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public GetOrderListRequestBody read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

