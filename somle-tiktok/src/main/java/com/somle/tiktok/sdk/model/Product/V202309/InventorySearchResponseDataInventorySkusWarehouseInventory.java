/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Product.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * InventorySearchResponseDataInventorySkusWarehouseInventory
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class InventorySearchResponseDataInventorySkusWarehouseInventory {
    public static final String SERIALIZED_NAME_AVAILABLE_QUANTITY = "available_quantity";
    public static final String SERIALIZED_NAME_COMMITTED_QUANTITY = "committed_quantity";
    public static final String SERIALIZED_NAME_WAREHOUSE_ID = "warehouse_id";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("available_quantity");
        openapiFields.add("committed_quantity");
        openapiFields.add("warehouse_id");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_AVAILABLE_QUANTITY)
    private Integer availableQuantity;
    @SerializedName(SERIALIZED_NAME_COMMITTED_QUANTITY)
    private Integer committedQuantity;
    @SerializedName(SERIALIZED_NAME_WAREHOUSE_ID)
    private String warehouseId;

    public InventorySearchResponseDataInventorySkusWarehouseInventory() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to InventorySearchResponseDataInventorySkusWarehouseInventory
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!InventorySearchResponseDataInventorySkusWarehouseInventory.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in InventorySearchResponseDataInventorySkusWarehouseInventory is not found in the empty JSON string", InventorySearchResponseDataInventorySkusWarehouseInventory.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!InventorySearchResponseDataInventorySkusWarehouseInventory.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InventorySearchResponseDataInventorySkusWarehouseInventory` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("warehouse_id") != null && !jsonObj.get("warehouse_id").isJsonNull()) && !jsonObj.get("warehouse_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `warehouse_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouse_id").toString()));
        }
    }

    /**
     * Create an instance of InventorySearchResponseDataInventorySkusWarehouseInventory given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of InventorySearchResponseDataInventorySkusWarehouseInventory
     * @throws IOException if the JSON string is invalid with respect to InventorySearchResponseDataInventorySkusWarehouseInventory
     */
    public static InventorySearchResponseDataInventorySkusWarehouseInventory fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, InventorySearchResponseDataInventorySkusWarehouseInventory.class);
    }

    public InventorySearchResponseDataInventorySkusWarehouseInventory availableQuantity(Integer availableQuantity) {
        this.availableQuantity = availableQuantity;
        return this;
    }

    /**
     * The total number of units available for ordering in this warehouse. This is equivalent to the &#x60;inventory.quantity&#x60; value returned in the [Get Product API](https://partner.tiktokshop.com/docv2/page/6509d85b4a0bb702c057fdda).
     *
     * @return availableQuantity
     **/
    @javax.annotation.Nullable
    public Integer getAvailableQuantity() {
        return availableQuantity;
    }

    public void setAvailableQuantity(Integer availableQuantity) {
        this.availableQuantity = availableQuantity;
    }

    public InventorySearchResponseDataInventorySkusWarehouseInventory committedQuantity(Integer committedQuantity) {
        this.committedQuantity = committedQuantity;
        return this;
    }

    /**
     * The total number of units reserved by existing customer orders in this warehouse (and therefore not available for ordering).
     *
     * @return committedQuantity
     **/
    @javax.annotation.Nullable
    public Integer getCommittedQuantity() {
        return committedQuantity;
    }

    public void setCommittedQuantity(Integer committedQuantity) {
        this.committedQuantity = committedQuantity;
    }

    public InventorySearchResponseDataInventorySkusWarehouseInventory warehouseId(String warehouseId) {
        this.warehouseId = warehouseId;
        return this;
    }

    /**
     * The ID of the warehouse where the SKU is stored.  Retrieve details of the warehouse from the  [Get Warehouse List API](https://partner.tiktokshop.com/docv2/page/650aa418defece02be6e66b6).
     *
     * @return warehouseId
     **/
    @javax.annotation.Nullable
    public String getWarehouseId() {
        return warehouseId;
    }

    public void setWarehouseId(String warehouseId) {
        this.warehouseId = warehouseId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InventorySearchResponseDataInventorySkusWarehouseInventory product202309InventorySearchResponseDataInventorySkusWarehouseInventory = (InventorySearchResponseDataInventorySkusWarehouseInventory) o;
        return Objects.equals(this.availableQuantity, product202309InventorySearchResponseDataInventorySkusWarehouseInventory.availableQuantity) &&
            Objects.equals(this.committedQuantity, product202309InventorySearchResponseDataInventorySkusWarehouseInventory.committedQuantity) &&
            Objects.equals(this.warehouseId, product202309InventorySearchResponseDataInventorySkusWarehouseInventory.warehouseId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(availableQuantity, committedQuantity, warehouseId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InventorySearchResponseDataInventorySkusWarehouseInventory {\n");
        sb.append("    availableQuantity: ").append(toIndentedString(availableQuantity)).append("\n");
        sb.append("    committedQuantity: ").append(toIndentedString(committedQuantity)).append("\n");
        sb.append("    warehouseId: ").append(toIndentedString(warehouseId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of InventorySearchResponseDataInventorySkusWarehouseInventory to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!InventorySearchResponseDataInventorySkusWarehouseInventory.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'InventorySearchResponseDataInventorySkusWarehouseInventory' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<InventorySearchResponseDataInventorySkusWarehouseInventory> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(InventorySearchResponseDataInventorySkusWarehouseInventory.class));

            return (TypeAdapter<T>) new TypeAdapter<InventorySearchResponseDataInventorySkusWarehouseInventory>() {
                @Override
                public void write(JsonWriter out, InventorySearchResponseDataInventorySkusWarehouseInventory value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public InventorySearchResponseDataInventorySkusWarehouseInventory read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

