/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Order.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.*;

/**
 * GetOrderDetailResponseDataOrdersRecipientAddress
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class GetOrderDetailResponseDataOrdersRecipientAddress {
    public static final String SERIALIZED_NAME_ADDRESS_DETAIL = "address_detail";
    public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "address_line1";
    public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "address_line2";
    public static final String SERIALIZED_NAME_ADDRESS_LINE3 = "address_line3";
    public static final String SERIALIZED_NAME_ADDRESS_LINE4 = "address_line4";
    public static final String SERIALIZED_NAME_DELIVERY_PREFERENCES = "delivery_preferences";
    public static final String SERIALIZED_NAME_DISTRICT_INFO = "district_info";
    public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
    public static final String SERIALIZED_NAME_FIRST_NAME_LOCAL_SCRIPT = "first_name_local_script";
    public static final String SERIALIZED_NAME_FULL_ADDRESS = "full_address";
    public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
    public static final String SERIALIZED_NAME_LAST_NAME_LOCAL_SCRIPT = "last_name_local_script";
    public static final String SERIALIZED_NAME_NAME = "name";
    public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
    public static final String SERIALIZED_NAME_POSTAL_CODE = "postal_code";
    public static final String SERIALIZED_NAME_REGION_CODE = "region_code";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("address_detail");
        openapiFields.add("address_line1");
        openapiFields.add("address_line2");
        openapiFields.add("address_line3");
        openapiFields.add("address_line4");
        openapiFields.add("delivery_preferences");
        openapiFields.add("district_info");
        openapiFields.add("first_name");
        openapiFields.add("first_name_local_script");
        openapiFields.add("full_address");
        openapiFields.add("last_name");
        openapiFields.add("last_name_local_script");
        openapiFields.add("name");
        openapiFields.add("phone_number");
        openapiFields.add("postal_code");
        openapiFields.add("region_code");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_ADDRESS_DETAIL)
    private String addressDetail;
    @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
    private String addressLine1;
    @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
    private String addressLine2;
    @SerializedName(SERIALIZED_NAME_ADDRESS_LINE3)
    private String addressLine3;
    @SerializedName(SERIALIZED_NAME_ADDRESS_LINE4)
    private String addressLine4;
    @SerializedName(SERIALIZED_NAME_DELIVERY_PREFERENCES)
    private GetOrderDetailResponseDataOrdersRecipientAddressDeliveryPreferences deliveryPreferences;
    @SerializedName(SERIALIZED_NAME_DISTRICT_INFO)
    private List<GetOrderDetailResponseDataOrdersRecipientAddressDistrictInfo> districtInfo = new ArrayList<>();
    @SerializedName(SERIALIZED_NAME_FIRST_NAME)
    private String firstName;
    @SerializedName(SERIALIZED_NAME_FIRST_NAME_LOCAL_SCRIPT)
    private String firstNameLocalScript;
    @SerializedName(SERIALIZED_NAME_FULL_ADDRESS)
    private String fullAddress;
    @SerializedName(SERIALIZED_NAME_LAST_NAME)
    private String lastName;
    @SerializedName(SERIALIZED_NAME_LAST_NAME_LOCAL_SCRIPT)
    private String lastNameLocalScript;
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;
    @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
    private String phoneNumber;
    @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
    private String postalCode;
    @SerializedName(SERIALIZED_NAME_REGION_CODE)
    private String regionCode;

    public GetOrderDetailResponseDataOrdersRecipientAddress() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to GetOrderDetailResponseDataOrdersRecipientAddress
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetOrderDetailResponseDataOrdersRecipientAddress.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in GetOrderDetailResponseDataOrdersRecipientAddress is not found in the empty JSON string", GetOrderDetailResponseDataOrdersRecipientAddress.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetOrderDetailResponseDataOrdersRecipientAddress.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOrderDetailResponseDataOrdersRecipientAddress` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("address_detail") != null && !jsonObj.get("address_detail").isJsonNull()) && !jsonObj.get("address_detail").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `address_detail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_detail").toString()));
        }
        if ((jsonObj.get("address_line1") != null && !jsonObj.get("address_line1").isJsonNull()) && !jsonObj.get("address_line1").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `address_line1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_line1").toString()));
        }
        if ((jsonObj.get("address_line2") != null && !jsonObj.get("address_line2").isJsonNull()) && !jsonObj.get("address_line2").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `address_line2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_line2").toString()));
        }
        if ((jsonObj.get("address_line3") != null && !jsonObj.get("address_line3").isJsonNull()) && !jsonObj.get("address_line3").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `address_line3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_line3").toString()));
        }
        if ((jsonObj.get("address_line4") != null && !jsonObj.get("address_line4").isJsonNull()) && !jsonObj.get("address_line4").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `address_line4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_line4").toString()));
        }
        // validate the optional field `delivery_preferences`
        if (jsonObj.get("delivery_preferences") != null && !jsonObj.get("delivery_preferences").isJsonNull()) {
            GetOrderDetailResponseDataOrdersRecipientAddressDeliveryPreferences.validateJsonElement(jsonObj.get("delivery_preferences"));
        }
        if (jsonObj.get("district_info") != null && !jsonObj.get("district_info").isJsonNull()) {
            JsonArray jsonArraydistrictInfo = jsonObj.getAsJsonArray("district_info");
            if (jsonArraydistrictInfo != null) {
                // ensure the json data is an array
                if (!jsonObj.get("district_info").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `district_info` to be an array in the JSON string but got `%s`", jsonObj.get("district_info").toString()));
                }

                // validate the optional field `district_info` (array)
                for (int i = 0; i < jsonArraydistrictInfo.size(); i++) {
                    GetOrderDetailResponseDataOrdersRecipientAddressDistrictInfo.validateJsonElement(jsonArraydistrictInfo.get(i));
                }
                ;
            }
        }
        if ((jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonNull()) && !jsonObj.get("first_name").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
        }
        if ((jsonObj.get("first_name_local_script") != null && !jsonObj.get("first_name_local_script").isJsonNull()) && !jsonObj.get("first_name_local_script").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `first_name_local_script` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name_local_script").toString()));
        }
        if ((jsonObj.get("full_address") != null && !jsonObj.get("full_address").isJsonNull()) && !jsonObj.get("full_address").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `full_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("full_address").toString()));
        }
        if ((jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonNull()) && !jsonObj.get("last_name").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
        }
        if ((jsonObj.get("last_name_local_script") != null && !jsonObj.get("last_name_local_script").isJsonNull()) && !jsonObj.get("last_name_local_script").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `last_name_local_script` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name_local_script").toString()));
        }
        if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
        }
        if ((jsonObj.get("phone_number") != null && !jsonObj.get("phone_number").isJsonNull()) && !jsonObj.get("phone_number").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone_number").toString()));
        }
        if ((jsonObj.get("postal_code") != null && !jsonObj.get("postal_code").isJsonNull()) && !jsonObj.get("postal_code").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postal_code").toString()));
        }
        if ((jsonObj.get("region_code") != null && !jsonObj.get("region_code").isJsonNull()) && !jsonObj.get("region_code").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `region_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region_code").toString()));
        }
    }

    /**
     * Create an instance of GetOrderDetailResponseDataOrdersRecipientAddress given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetOrderDetailResponseDataOrdersRecipientAddress
     * @throws IOException if the JSON string is invalid with respect to GetOrderDetailResponseDataOrdersRecipientAddress
     */
    public static GetOrderDetailResponseDataOrdersRecipientAddress fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, GetOrderDetailResponseDataOrdersRecipientAddress.class);
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress addressDetail(String addressDetail) {
        this.addressDetail = addressDetail;
        return this;
    }

    /**
     * Full buyer detail address.
     *
     * @return addressDetail
     **/
    @javax.annotation.Nullable
    public String getAddressDetail() {
        return addressDetail;
    }

    public void setAddressDetail(String addressDetail) {
        this.addressDetail = addressDetail;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress addressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
        return this;
    }

    /**
     * The first line of the street address.
     *
     * @return addressLine1
     **/
    @javax.annotation.Nullable
    public String getAddressLine1() {
        return addressLine1;
    }

    public void setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress addressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
        return this;
    }

    /**
     * The second line of the street address
     *
     * @return addressLine2
     **/
    @javax.annotation.Nullable
    public String getAddressLine2() {
        return addressLine2;
    }

    public void setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress addressLine3(String addressLine3) {
        this.addressLine3 = addressLine3;
        return this;
    }

    /**
     * The third line of the street address.  Applicable only for the BR market.
     *
     * @return addressLine3
     **/
    @javax.annotation.Nullable
    public String getAddressLine3() {
        return addressLine3;
    }

    public void setAddressLine3(String addressLine3) {
        this.addressLine3 = addressLine3;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress addressLine4(String addressLine4) {
        this.addressLine4 = addressLine4;
        return this;
    }

    /**
     * The fourth line of the street address. Applicable only for the BR market.
     *
     * @return addressLine4
     **/
    @javax.annotation.Nullable
    public String getAddressLine4() {
        return addressLine4;
    }

    public void setAddressLine4(String addressLine4) {
        this.addressLine4 = addressLine4;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress deliveryPreferences(GetOrderDetailResponseDataOrdersRecipientAddressDeliveryPreferences deliveryPreferences) {
        this.deliveryPreferences = deliveryPreferences;
        return this;
    }

    /**
     * Get deliveryPreferences
     *
     * @return deliveryPreferences
     **/
    @javax.annotation.Nullable
    public GetOrderDetailResponseDataOrdersRecipientAddressDeliveryPreferences getDeliveryPreferences() {
        return deliveryPreferences;
    }

    public void setDeliveryPreferences(GetOrderDetailResponseDataOrdersRecipientAddressDeliveryPreferences deliveryPreferences) {
        this.deliveryPreferences = deliveryPreferences;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress districtInfo(List<GetOrderDetailResponseDataOrdersRecipientAddressDistrictInfo> districtInfo) {
        this.districtInfo = districtInfo;
        return this;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress addDistrictInfoItem(GetOrderDetailResponseDataOrdersRecipientAddressDistrictInfo districtInfoItem) {
        if (this.districtInfo == null) {
            this.districtInfo = new ArrayList<>();
        }
        this.districtInfo.add(districtInfoItem);
        return this;
    }

    /**
     * District information list.
     *
     * @return districtInfo
     **/
    @javax.annotation.Nullable
    public List<GetOrderDetailResponseDataOrdersRecipientAddressDistrictInfo> getDistrictInfo() {
        return districtInfo;
    }

    public void setDistrictInfo(List<GetOrderDetailResponseDataOrdersRecipientAddressDistrictInfo> districtInfo) {
        this.districtInfo = districtInfo;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress firstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    /**
     * The first name of the recipient. If the buyer does not provide their first and last name separately, this parameter will have the same value as the \&quot;name\&quot; parameter.   **Note**: Applicable only for the US, UK, and JP markets.
     *
     * @return firstName
     **/
    @javax.annotation.Nullable
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress firstNameLocalScript(String firstNameLocalScript) {
        this.firstNameLocalScript = firstNameLocalScript;
        return this;
    }

    /**
     * Recipient first name in katakana. **Note**: Applicable only for the JP market.
     *
     * @return firstNameLocalScript
     **/
    @javax.annotation.Nullable
    public String getFirstNameLocalScript() {
        return firstNameLocalScript;
    }

    public void setFirstNameLocalScript(String firstNameLocalScript) {
        this.firstNameLocalScript = firstNameLocalScript;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress fullAddress(String fullAddress) {
        this.fullAddress = fullAddress;
        return this;
    }

    /**
     * The complete recipient addresses information.
     *
     * @return fullAddress
     **/
    @javax.annotation.Nullable
    public String getFullAddress() {
        return fullAddress;
    }

    public void setFullAddress(String fullAddress) {
        this.fullAddress = fullAddress;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress lastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    /**
     * The last name of the recipient. If the buyer does not provide their first and last name separately, this parameter will be empty.   **Note**: Applicable only for the US, UK, and JP markets.
     *
     * @return lastName
     **/
    @javax.annotation.Nullable
    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress lastNameLocalScript(String lastNameLocalScript) {
        this.lastNameLocalScript = lastNameLocalScript;
        return this;
    }

    /**
     * Recipient last name in katakana. **Note**: Applicable only for the JP market.
     *
     * @return lastNameLocalScript
     **/
    @javax.annotation.Nullable
    public String getLastNameLocalScript() {
        return lastNameLocalScript;
    }

    public void setLastNameLocalScript(String lastNameLocalScript) {
        this.lastNameLocalScript = lastNameLocalScript;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress name(String name) {
        this.name = name;
        return this;
    }

    /**
     * The name of the recipient. Please note, if this order uses platform logistics, recipient name will be desensitized
     *
     * @return name
     **/
    @javax.annotation.Nullable
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress phoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }

    /**
     * The telephone number of the buyer. Please notice, if this order uses platform logistics, phone number will be desensitized.
     *
     * @return phoneNumber
     **/
    @javax.annotation.Nullable
    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress postalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }

    /**
     * The postal code that can be used by seller for shipping (in the U.S, this is the ZIP code).
     *
     * @return postalCode
     **/
    @javax.annotation.Nullable
    public String getPostalCode() {
        return postalCode;
    }

    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    public GetOrderDetailResponseDataOrdersRecipientAddress regionCode(String regionCode) {
        this.regionCode = regionCode;
        return this;
    }

    /**
     * Region code.
     *
     * @return regionCode
     **/
    @javax.annotation.Nullable
    public String getRegionCode() {
        return regionCode;
    }

    public void setRegionCode(String regionCode) {
        this.regionCode = regionCode;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetOrderDetailResponseDataOrdersRecipientAddress order202309GetOrderDetailResponseDataOrdersRecipientAddress = (GetOrderDetailResponseDataOrdersRecipientAddress) o;
        return Objects.equals(this.addressDetail, order202309GetOrderDetailResponseDataOrdersRecipientAddress.addressDetail) &&
            Objects.equals(this.addressLine1, order202309GetOrderDetailResponseDataOrdersRecipientAddress.addressLine1) &&
            Objects.equals(this.addressLine2, order202309GetOrderDetailResponseDataOrdersRecipientAddress.addressLine2) &&
            Objects.equals(this.addressLine3, order202309GetOrderDetailResponseDataOrdersRecipientAddress.addressLine3) &&
            Objects.equals(this.addressLine4, order202309GetOrderDetailResponseDataOrdersRecipientAddress.addressLine4) &&
            Objects.equals(this.deliveryPreferences, order202309GetOrderDetailResponseDataOrdersRecipientAddress.deliveryPreferences) &&
            Objects.equals(this.districtInfo, order202309GetOrderDetailResponseDataOrdersRecipientAddress.districtInfo) &&
            Objects.equals(this.firstName, order202309GetOrderDetailResponseDataOrdersRecipientAddress.firstName) &&
            Objects.equals(this.firstNameLocalScript, order202309GetOrderDetailResponseDataOrdersRecipientAddress.firstNameLocalScript) &&
            Objects.equals(this.fullAddress, order202309GetOrderDetailResponseDataOrdersRecipientAddress.fullAddress) &&
            Objects.equals(this.lastName, order202309GetOrderDetailResponseDataOrdersRecipientAddress.lastName) &&
            Objects.equals(this.lastNameLocalScript, order202309GetOrderDetailResponseDataOrdersRecipientAddress.lastNameLocalScript) &&
            Objects.equals(this.name, order202309GetOrderDetailResponseDataOrdersRecipientAddress.name) &&
            Objects.equals(this.phoneNumber, order202309GetOrderDetailResponseDataOrdersRecipientAddress.phoneNumber) &&
            Objects.equals(this.postalCode, order202309GetOrderDetailResponseDataOrdersRecipientAddress.postalCode) &&
            Objects.equals(this.regionCode, order202309GetOrderDetailResponseDataOrdersRecipientAddress.regionCode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(addressDetail, addressLine1, addressLine2, addressLine3, addressLine4, deliveryPreferences, districtInfo, firstName, firstNameLocalScript, fullAddress, lastName, lastNameLocalScript, name, phoneNumber, postalCode, regionCode);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetOrderDetailResponseDataOrdersRecipientAddress {\n");
        sb.append("    addressDetail: ").append(toIndentedString(addressDetail)).append("\n");
        sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
        sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
        sb.append("    addressLine3: ").append(toIndentedString(addressLine3)).append("\n");
        sb.append("    addressLine4: ").append(toIndentedString(addressLine4)).append("\n");
        sb.append("    deliveryPreferences: ").append(toIndentedString(deliveryPreferences)).append("\n");
        sb.append("    districtInfo: ").append(toIndentedString(districtInfo)).append("\n");
        sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
        sb.append("    firstNameLocalScript: ").append(toIndentedString(firstNameLocalScript)).append("\n");
        sb.append("    fullAddress: ").append(toIndentedString(fullAddress)).append("\n");
        sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
        sb.append("    lastNameLocalScript: ").append(toIndentedString(lastNameLocalScript)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
        sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
        sb.append("    regionCode: ").append(toIndentedString(regionCode)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of GetOrderDetailResponseDataOrdersRecipientAddress to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetOrderDetailResponseDataOrdersRecipientAddress.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'GetOrderDetailResponseDataOrdersRecipientAddress' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetOrderDetailResponseDataOrdersRecipientAddress> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(GetOrderDetailResponseDataOrdersRecipientAddress.class));

            return (TypeAdapter<T>) new TypeAdapter<GetOrderDetailResponseDataOrdersRecipientAddress>() {
                @Override
                public void write(JsonWriter out, GetOrderDetailResponseDataOrdersRecipientAddress value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public GetOrderDetailResponseDataOrdersRecipientAddress read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

