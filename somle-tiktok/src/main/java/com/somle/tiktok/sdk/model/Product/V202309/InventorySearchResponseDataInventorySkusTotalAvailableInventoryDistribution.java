/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Product.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.*;

/**
 * InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution {
    public static final String SERIALIZED_NAME_CAMPAIGN_INVENTORY = "campaign_inventory";
    public static final String SERIALIZED_NAME_CREATOR_INVENTORY = "creator_inventory";
    public static final String SERIALIZED_NAME_IN_SHOP_INVENTORY = "in_shop_inventory";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("campaign_inventory");
        openapiFields.add("creator_inventory");
        openapiFields.add("in_shop_inventory");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_CAMPAIGN_INVENTORY)
    private List<InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCampaignInventory> campaignInventory = new ArrayList<>();
    @SerializedName(SERIALIZED_NAME_CREATOR_INVENTORY)
    private List<InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCreatorInventory> creatorInventory = new ArrayList<>();
    @SerializedName(SERIALIZED_NAME_IN_SHOP_INVENTORY)
    private InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionInShopInventory inShopInventory;

    public InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution is not found in the empty JSON string", InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if (jsonObj.get("campaign_inventory") != null && !jsonObj.get("campaign_inventory").isJsonNull()) {
            JsonArray jsonArraycampaignInventory = jsonObj.getAsJsonArray("campaign_inventory");
            if (jsonArraycampaignInventory != null) {
                // ensure the json data is an array
                if (!jsonObj.get("campaign_inventory").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `campaign_inventory` to be an array in the JSON string but got `%s`", jsonObj.get("campaign_inventory").toString()));
                }

                // validate the optional field `campaign_inventory` (array)
                for (int i = 0; i < jsonArraycampaignInventory.size(); i++) {
                    InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCampaignInventory.validateJsonElement(jsonArraycampaignInventory.get(i));
                }
                ;
            }
        }
        if (jsonObj.get("creator_inventory") != null && !jsonObj.get("creator_inventory").isJsonNull()) {
            JsonArray jsonArraycreatorInventory = jsonObj.getAsJsonArray("creator_inventory");
            if (jsonArraycreatorInventory != null) {
                // ensure the json data is an array
                if (!jsonObj.get("creator_inventory").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `creator_inventory` to be an array in the JSON string but got `%s`", jsonObj.get("creator_inventory").toString()));
                }

                // validate the optional field `creator_inventory` (array)
                for (int i = 0; i < jsonArraycreatorInventory.size(); i++) {
                    InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCreatorInventory.validateJsonElement(jsonArraycreatorInventory.get(i));
                }
                ;
            }
        }
        // validate the optional field `in_shop_inventory`
        if (jsonObj.get("in_shop_inventory") != null && !jsonObj.get("in_shop_inventory").isJsonNull()) {
            InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionInShopInventory.validateJsonElement(jsonObj.get("in_shop_inventory"));
        }
    }

    /**
     * Create an instance of InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution
     * @throws IOException if the JSON string is invalid with respect to InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution
     */
    public static InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution.class);
    }

    public InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution campaignInventory(List<InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCampaignInventory> campaignInventory) {
        this.campaignInventory = campaignInventory;
        return this;
    }

    public InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution addCampaignInventoryItem(InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCampaignInventory campaignInventoryItem) {
        if (this.campaignInventory == null) {
            this.campaignInventory = new ArrayList<>();
        }
        this.campaignInventory.add(campaignInventoryItem);
        return this;
    }

    /**
     * Inventory that is allocated to a specific campaign.
     *
     * @return campaignInventory
     **/
    @javax.annotation.Nullable
    public List<InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCampaignInventory> getCampaignInventory() {
        return campaignInventory;
    }

    public void setCampaignInventory(List<InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCampaignInventory> campaignInventory) {
        this.campaignInventory = campaignInventory;
    }

    public InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution creatorInventory(List<InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCreatorInventory> creatorInventory) {
        this.creatorInventory = creatorInventory;
        return this;
    }

    public InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution addCreatorInventoryItem(InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCreatorInventory creatorInventoryItem) {
        if (this.creatorInventory == null) {
            this.creatorInventory = new ArrayList<>();
        }
        this.creatorInventory.add(creatorInventoryItem);
        return this;
    }

    /**
     * Inventory that is allocated to TikTok creators.
     *
     * @return creatorInventory
     **/
    @javax.annotation.Nullable
    public List<InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCreatorInventory> getCreatorInventory() {
        return creatorInventory;
    }

    public void setCreatorInventory(List<InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionCreatorInventory> creatorInventory) {
        this.creatorInventory = creatorInventory;
    }

    public InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution inShopInventory(InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionInShopInventory inShopInventory) {
        this.inShopInventory = inShopInventory;
        return this;
    }

    /**
     * Get inShopInventory
     *
     * @return inShopInventory
     **/
    @javax.annotation.Nullable
    public InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionInShopInventory getInShopInventory() {
        return inShopInventory;
    }

    public void setInShopInventory(InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistributionInShopInventory inShopInventory) {
        this.inShopInventory = inShopInventory;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution product202309InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution = (InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution) o;
        return Objects.equals(this.campaignInventory, product202309InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution.campaignInventory) &&
            Objects.equals(this.creatorInventory, product202309InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution.creatorInventory) &&
            Objects.equals(this.inShopInventory, product202309InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution.inShopInventory);
    }

    @Override
    public int hashCode() {
        return Objects.hash(campaignInventory, creatorInventory, inShopInventory);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution {\n");
        sb.append("    campaignInventory: ").append(toIndentedString(campaignInventory)).append("\n");
        sb.append("    creatorInventory: ").append(toIndentedString(creatorInventory)).append("\n");
        sb.append("    inShopInventory: ").append(toIndentedString(inShopInventory)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution.class));

            return (TypeAdapter<T>) new TypeAdapter<InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution>() {
                @Override
                public void write(JsonWriter out, InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public InventorySearchResponseDataInventorySkusTotalAvailableInventoryDistribution read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

