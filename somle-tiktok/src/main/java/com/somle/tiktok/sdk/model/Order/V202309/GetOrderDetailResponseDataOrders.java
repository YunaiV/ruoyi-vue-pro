/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Order.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.*;

/**
 * GetOrderDetailResponseDataOrders
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class GetOrderDetailResponseDataOrders {
    public static final String SERIALIZED_NAME_AUTO_COMBINE_GROUP_ID = "auto_combine_group_id";
    public static final String SERIALIZED_NAME_BUYER_EMAIL = "buyer_email";
    public static final String SERIALIZED_NAME_BUYER_MESSAGE = "buyer_message";
    public static final String SERIALIZED_NAME_CANCEL_ORDER_SLA_TIME = "cancel_order_sla_time";
    public static final String SERIALIZED_NAME_CANCEL_REASON = "cancel_reason";
    public static final String SERIALIZED_NAME_CANCEL_TIME = "cancel_time";
    public static final String SERIALIZED_NAME_CANCELLATION_INITIATOR = "cancellation_initiator";
    public static final String SERIALIZED_NAME_COLLECTION_DUE_TIME = "collection_due_time";
    public static final String SERIALIZED_NAME_COLLECTION_TIME = "collection_time";
    public static final String SERIALIZED_NAME_COMMERCE_PLATFORM = "commerce_platform";
    public static final String SERIALIZED_NAME_CONSULTATION_ID = "consultation_id";
    public static final String SERIALIZED_NAME_CPF = "cpf";
    public static final String SERIALIZED_NAME_CPF_NAME = "cpf_name";
    public static final String SERIALIZED_NAME_CREATE_TIME = "create_time";
    public static final String SERIALIZED_NAME_DELIVERY_DUE_TIME = "delivery_due_time";
    public static final String SERIALIZED_NAME_DELIVERY_OPTION_ID = "delivery_option_id";
    public static final String SERIALIZED_NAME_DELIVERY_OPTION_NAME = "delivery_option_name";
    public static final String SERIALIZED_NAME_DELIVERY_OPTION_REQUIRED_DELIVERY_TIME = "delivery_option_required_delivery_time";
    public static final String SERIALIZED_NAME_DELIVERY_SLA_TIME = "delivery_sla_time";
    public static final String SERIALIZED_NAME_DELIVERY_TIME = "delivery_time";
    public static final String SERIALIZED_NAME_DELIVERY_TYPE = "delivery_type";
    public static final String SERIALIZED_NAME_EXCHANGE_SOURCE_ORDER_ID = "exchange_source_order_id";
    public static final String SERIALIZED_NAME_FAST_DELIVERY_PROGRAM = "fast_delivery_program";
    public static final String SERIALIZED_NAME_FAST_DISPATCH_SLA_TIME = "fast_dispatch_sla_time";
    public static final String SERIALIZED_NAME_FULFILLMENT_TYPE = "fulfillment_type";
    public static final String SERIALIZED_NAME_HANDLING_DURATION = "handling_duration";
    public static final String SERIALIZED_NAME_HAS_UPDATED_RECIPIENT_ADDRESS = "has_updated_recipient_address";
    public static final String SERIALIZED_NAME_ID = "id";
    public static final String SERIALIZED_NAME_IS_BUYER_REQUEST_CANCEL = "is_buyer_request_cancel";
    public static final String SERIALIZED_NAME_IS_COD = "is_cod";
    public static final String SERIALIZED_NAME_IS_EXCHANGE_ORDER = "is_exchange_order";
    public static final String SERIALIZED_NAME_IS_ON_HOLD_ORDER = "is_on_hold_order";
    public static final String SERIALIZED_NAME_IS_REPLACEMENT_ORDER = "is_replacement_order";
    public static final String SERIALIZED_NAME_IS_SAMPLE_ORDER = "is_sample_order";
    public static final String SERIALIZED_NAME_LINE_ITEMS = "line_items";
    public static final String SERIALIZED_NAME_NEED_UPLOAD_INVOICE = "need_upload_invoice";
    public static final String SERIALIZED_NAME_ORDER_TYPE = "order_type";
    public static final String SERIALIZED_NAME_PACKAGES = "packages";
    public static final String SERIALIZED_NAME_PAID_TIME = "paid_time";
    public static final String SERIALIZED_NAME_PAYMENT = "payment";
    public static final String SERIALIZED_NAME_PAYMENT_METHOD_NAME = "payment_method_name";
    public static final String SERIALIZED_NAME_PICK_UP_CUT_OFF_TIME = "pick_up_cut_off_time";
    public static final String SERIALIZED_NAME_RECIPIENT_ADDRESS = "recipient_address";
    public static final String SERIALIZED_NAME_RELEASE_DATE = "release_date";
    public static final String SERIALIZED_NAME_REPLACED_ORDER_ID = "replaced_order_id";
    public static final String SERIALIZED_NAME_REQUEST_CANCEL_TIME = "request_cancel_time";
    public static final String SERIALIZED_NAME_RTS_SLA_TIME = "rts_sla_time";
    public static final String SERIALIZED_NAME_RTS_TIME = "rts_time";
    public static final String SERIALIZED_NAME_SELLER_NOTE = "seller_note";
    public static final String SERIALIZED_NAME_SHIPPING_DUE_TIME = "shipping_due_time";
    public static final String SERIALIZED_NAME_SHIPPING_PROVIDER = "shipping_provider";
    public static final String SERIALIZED_NAME_SHIPPING_PROVIDER_ID = "shipping_provider_id";
    public static final String SERIALIZED_NAME_SHIPPING_TYPE = "shipping_type";
    public static final String SERIALIZED_NAME_SPLIT_OR_COMBINE_TAG = "split_or_combine_tag";
    public static final String SERIALIZED_NAME_STATUS = "status";
    public static final String SERIALIZED_NAME_TRACKING_NUMBER = "tracking_number";
    public static final String SERIALIZED_NAME_TTS_SLA_TIME = "tts_sla_time";
    public static final String SERIALIZED_NAME_UPDATE_TIME = "update_time";
    public static final String SERIALIZED_NAME_USER_ID = "user_id";
    public static final String SERIALIZED_NAME_WAREHOUSE_ID = "warehouse_id";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("auto_combine_group_id");
        openapiFields.add("buyer_email");
        openapiFields.add("buyer_message");
        openapiFields.add("cancel_order_sla_time");
        openapiFields.add("cancel_reason");
        openapiFields.add("cancel_time");
        openapiFields.add("cancellation_initiator");
        openapiFields.add("collection_due_time");
        openapiFields.add("collection_time");
        openapiFields.add("commerce_platform");
        openapiFields.add("consultation_id");
        openapiFields.add("cpf");
        openapiFields.add("cpf_name");
        openapiFields.add("create_time");
        openapiFields.add("delivery_due_time");
        openapiFields.add("delivery_option_id");
        openapiFields.add("delivery_option_name");
        openapiFields.add("delivery_option_required_delivery_time");
        openapiFields.add("delivery_sla_time");
        openapiFields.add("delivery_time");
        openapiFields.add("delivery_type");
        openapiFields.add("exchange_source_order_id");
        openapiFields.add("fast_delivery_program");
        openapiFields.add("fast_dispatch_sla_time");
        openapiFields.add("fulfillment_type");
        openapiFields.add("handling_duration");
        openapiFields.add("has_updated_recipient_address");
        openapiFields.add("id");
        openapiFields.add("is_buyer_request_cancel");
        openapiFields.add("is_cod");
        openapiFields.add("is_exchange_order");
        openapiFields.add("is_on_hold_order");
        openapiFields.add("is_replacement_order");
        openapiFields.add("is_sample_order");
        openapiFields.add("line_items");
        openapiFields.add("need_upload_invoice");
        openapiFields.add("order_type");
        openapiFields.add("packages");
        openapiFields.add("paid_time");
        openapiFields.add("payment");
        openapiFields.add("payment_method_name");
        openapiFields.add("pick_up_cut_off_time");
        openapiFields.add("recipient_address");
        openapiFields.add("release_date");
        openapiFields.add("replaced_order_id");
        openapiFields.add("request_cancel_time");
        openapiFields.add("rts_sla_time");
        openapiFields.add("rts_time");
        openapiFields.add("seller_note");
        openapiFields.add("shipping_due_time");
        openapiFields.add("shipping_provider");
        openapiFields.add("shipping_provider_id");
        openapiFields.add("shipping_type");
        openapiFields.add("split_or_combine_tag");
        openapiFields.add("status");
        openapiFields.add("tracking_number");
        openapiFields.add("tts_sla_time");
        openapiFields.add("update_time");
        openapiFields.add("user_id");
        openapiFields.add("warehouse_id");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_AUTO_COMBINE_GROUP_ID)
    private String autoCombineGroupId;
    @SerializedName(SERIALIZED_NAME_BUYER_EMAIL)
    private String buyerEmail;
    @SerializedName(SERIALIZED_NAME_BUYER_MESSAGE)
    private String buyerMessage;
    @SerializedName(SERIALIZED_NAME_CANCEL_ORDER_SLA_TIME)
    private Long cancelOrderSlaTime;
    @SerializedName(SERIALIZED_NAME_CANCEL_REASON)
    private String cancelReason;
    @SerializedName(SERIALIZED_NAME_CANCEL_TIME)
    private Long cancelTime;
    @SerializedName(SERIALIZED_NAME_CANCELLATION_INITIATOR)
    private String cancellationInitiator;
    @SerializedName(SERIALIZED_NAME_COLLECTION_DUE_TIME)
    private Long collectionDueTime;
    @SerializedName(SERIALIZED_NAME_COLLECTION_TIME)
    private Long collectionTime;
    @SerializedName(SERIALIZED_NAME_COMMERCE_PLATFORM)
    private String commercePlatform;
    @SerializedName(SERIALIZED_NAME_CONSULTATION_ID)
    private String consultationId;
    @SerializedName(SERIALIZED_NAME_CPF)
    private String cpf;
    @SerializedName(SERIALIZED_NAME_CPF_NAME)
    private String cpfName;
    @SerializedName(SERIALIZED_NAME_CREATE_TIME)
    private Long createTime;
    @SerializedName(SERIALIZED_NAME_DELIVERY_DUE_TIME)
    private Long deliveryDueTime;
    @SerializedName(SERIALIZED_NAME_DELIVERY_OPTION_ID)
    private String deliveryOptionId;
    @SerializedName(SERIALIZED_NAME_DELIVERY_OPTION_NAME)
    private String deliveryOptionName;
    @SerializedName(SERIALIZED_NAME_DELIVERY_OPTION_REQUIRED_DELIVERY_TIME)
    private Long deliveryOptionRequiredDeliveryTime;
    @SerializedName(SERIALIZED_NAME_DELIVERY_SLA_TIME)
    private Long deliverySlaTime;
    @SerializedName(SERIALIZED_NAME_DELIVERY_TIME)
    private Long deliveryTime;
    @SerializedName(SERIALIZED_NAME_DELIVERY_TYPE)
    private String deliveryType;
    @SerializedName(SERIALIZED_NAME_EXCHANGE_SOURCE_ORDER_ID)
    private String exchangeSourceOrderId;
    @SerializedName(SERIALIZED_NAME_FAST_DELIVERY_PROGRAM)
    private String fastDeliveryProgram;
    @SerializedName(SERIALIZED_NAME_FAST_DISPATCH_SLA_TIME)
    private Long fastDispatchSlaTime;
    @SerializedName(SERIALIZED_NAME_FULFILLMENT_TYPE)
    private String fulfillmentType;
    @SerializedName(SERIALIZED_NAME_HANDLING_DURATION)
    private GetOrderDetailResponseDataOrdersHandlingDuration handlingDuration;
    @SerializedName(SERIALIZED_NAME_HAS_UPDATED_RECIPIENT_ADDRESS)
    private Boolean hasUpdatedRecipientAddress;
    @SerializedName(SERIALIZED_NAME_ID)
    private String id;
    @SerializedName(SERIALIZED_NAME_IS_BUYER_REQUEST_CANCEL)
    private Boolean isBuyerRequestCancel;
    @SerializedName(SERIALIZED_NAME_IS_COD)
    private Boolean isCod;
    @SerializedName(SERIALIZED_NAME_IS_EXCHANGE_ORDER)
    private Boolean isExchangeOrder;
    @SerializedName(SERIALIZED_NAME_IS_ON_HOLD_ORDER)
    private Boolean isOnHoldOrder;
    @SerializedName(SERIALIZED_NAME_IS_REPLACEMENT_ORDER)
    private Boolean isReplacementOrder;
    @SerializedName(SERIALIZED_NAME_IS_SAMPLE_ORDER)
    private Boolean isSampleOrder;
    @SerializedName(SERIALIZED_NAME_LINE_ITEMS)
    private List<GetOrderDetailResponseDataOrdersLineItems> lineItems = new ArrayList<>();
    @SerializedName(SERIALIZED_NAME_NEED_UPLOAD_INVOICE)
    private String needUploadInvoice;
    @SerializedName(SERIALIZED_NAME_ORDER_TYPE)
    private String orderType;
    @SerializedName(SERIALIZED_NAME_PACKAGES)
    private List<GetOrderDetailResponseDataOrdersPackages> packages = new ArrayList<>();
    @SerializedName(SERIALIZED_NAME_PAID_TIME)
    private Long paidTime;
    @SerializedName(SERIALIZED_NAME_PAYMENT)
    private GetOrderDetailResponseDataOrdersPayment payment;
    @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD_NAME)
    private String paymentMethodName;
    @SerializedName(SERIALIZED_NAME_PICK_UP_CUT_OFF_TIME)
    private Long pickUpCutOffTime;
    @SerializedName(SERIALIZED_NAME_RECIPIENT_ADDRESS)
    private GetOrderDetailResponseDataOrdersRecipientAddress recipientAddress;
    @SerializedName(SERIALIZED_NAME_RELEASE_DATE)
    private Long releaseDate;
    @SerializedName(SERIALIZED_NAME_REPLACED_ORDER_ID)
    private String replacedOrderId;
    @SerializedName(SERIALIZED_NAME_REQUEST_CANCEL_TIME)
    private Long requestCancelTime;
    @SerializedName(SERIALIZED_NAME_RTS_SLA_TIME)
    private Long rtsSlaTime;
    @SerializedName(SERIALIZED_NAME_RTS_TIME)
    private Long rtsTime;
    @SerializedName(SERIALIZED_NAME_SELLER_NOTE)
    private String sellerNote;
    @SerializedName(SERIALIZED_NAME_SHIPPING_DUE_TIME)
    private Long shippingDueTime;
    @SerializedName(SERIALIZED_NAME_SHIPPING_PROVIDER)
    private String shippingProvider;
    @SerializedName(SERIALIZED_NAME_SHIPPING_PROVIDER_ID)
    private String shippingProviderId;
    @SerializedName(SERIALIZED_NAME_SHIPPING_TYPE)
    private String shippingType;
    @SerializedName(SERIALIZED_NAME_SPLIT_OR_COMBINE_TAG)
    private String splitOrCombineTag;
    @SerializedName(SERIALIZED_NAME_STATUS)
    private String status;
    @SerializedName(SERIALIZED_NAME_TRACKING_NUMBER)
    private String trackingNumber;
    @SerializedName(SERIALIZED_NAME_TTS_SLA_TIME)
    private Long ttsSlaTime;
    @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
    private Long updateTime;
    @SerializedName(SERIALIZED_NAME_USER_ID)
    private String userId;
    @SerializedName(SERIALIZED_NAME_WAREHOUSE_ID)
    private String warehouseId;

    public GetOrderDetailResponseDataOrders() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to GetOrderDetailResponseDataOrders
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetOrderDetailResponseDataOrders.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in GetOrderDetailResponseDataOrders is not found in the empty JSON string", GetOrderDetailResponseDataOrders.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetOrderDetailResponseDataOrders.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOrderDetailResponseDataOrders` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("auto_combine_group_id") != null && !jsonObj.get("auto_combine_group_id").isJsonNull()) && !jsonObj.get("auto_combine_group_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `auto_combine_group_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auto_combine_group_id").toString()));
        }
        if ((jsonObj.get("buyer_email") != null && !jsonObj.get("buyer_email").isJsonNull()) && !jsonObj.get("buyer_email").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `buyer_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_email").toString()));
        }
        if ((jsonObj.get("buyer_message") != null && !jsonObj.get("buyer_message").isJsonNull()) && !jsonObj.get("buyer_message").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `buyer_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_message").toString()));
        }
        if ((jsonObj.get("cancel_reason") != null && !jsonObj.get("cancel_reason").isJsonNull()) && !jsonObj.get("cancel_reason").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `cancel_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cancel_reason").toString()));
        }
        if ((jsonObj.get("cancellation_initiator") != null && !jsonObj.get("cancellation_initiator").isJsonNull()) && !jsonObj.get("cancellation_initiator").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `cancellation_initiator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cancellation_initiator").toString()));
        }
        if ((jsonObj.get("commerce_platform") != null && !jsonObj.get("commerce_platform").isJsonNull()) && !jsonObj.get("commerce_platform").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `commerce_platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commerce_platform").toString()));
        }
        if ((jsonObj.get("consultation_id") != null && !jsonObj.get("consultation_id").isJsonNull()) && !jsonObj.get("consultation_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `consultation_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("consultation_id").toString()));
        }
        if ((jsonObj.get("cpf") != null && !jsonObj.get("cpf").isJsonNull()) && !jsonObj.get("cpf").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `cpf` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cpf").toString()));
        }
        if ((jsonObj.get("cpf_name") != null && !jsonObj.get("cpf_name").isJsonNull()) && !jsonObj.get("cpf_name").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `cpf_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cpf_name").toString()));
        }
        if ((jsonObj.get("delivery_option_id") != null && !jsonObj.get("delivery_option_id").isJsonNull()) && !jsonObj.get("delivery_option_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `delivery_option_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivery_option_id").toString()));
        }
        if ((jsonObj.get("delivery_option_name") != null && !jsonObj.get("delivery_option_name").isJsonNull()) && !jsonObj.get("delivery_option_name").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `delivery_option_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivery_option_name").toString()));
        }
        if ((jsonObj.get("delivery_type") != null && !jsonObj.get("delivery_type").isJsonNull()) && !jsonObj.get("delivery_type").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `delivery_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivery_type").toString()));
        }
        if ((jsonObj.get("exchange_source_order_id") != null && !jsonObj.get("exchange_source_order_id").isJsonNull()) && !jsonObj.get("exchange_source_order_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `exchange_source_order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exchange_source_order_id").toString()));
        }
        if ((jsonObj.get("fast_delivery_program") != null && !jsonObj.get("fast_delivery_program").isJsonNull()) && !jsonObj.get("fast_delivery_program").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `fast_delivery_program` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fast_delivery_program").toString()));
        }
        if ((jsonObj.get("fulfillment_type") != null && !jsonObj.get("fulfillment_type").isJsonNull()) && !jsonObj.get("fulfillment_type").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `fulfillment_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillment_type").toString()));
        }
        // validate the optional field `handling_duration`
        if (jsonObj.get("handling_duration") != null && !jsonObj.get("handling_duration").isJsonNull()) {
            GetOrderDetailResponseDataOrdersHandlingDuration.validateJsonElement(jsonObj.get("handling_duration"));
        }
        if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
        }
        if (jsonObj.get("line_items") != null && !jsonObj.get("line_items").isJsonNull()) {
            JsonArray jsonArraylineItems = jsonObj.getAsJsonArray("line_items");
            if (jsonArraylineItems != null) {
                // ensure the json data is an array
                if (!jsonObj.get("line_items").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `line_items` to be an array in the JSON string but got `%s`", jsonObj.get("line_items").toString()));
                }

                // validate the optional field `line_items` (array)
                for (int i = 0; i < jsonArraylineItems.size(); i++) {
                    GetOrderDetailResponseDataOrdersLineItems.validateJsonElement(jsonArraylineItems.get(i));
                }
                ;
            }
        }
        if ((jsonObj.get("need_upload_invoice") != null && !jsonObj.get("need_upload_invoice").isJsonNull()) && !jsonObj.get("need_upload_invoice").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `need_upload_invoice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("need_upload_invoice").toString()));
        }
        if ((jsonObj.get("order_type") != null && !jsonObj.get("order_type").isJsonNull()) && !jsonObj.get("order_type").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `order_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_type").toString()));
        }
        if (jsonObj.get("packages") != null && !jsonObj.get("packages").isJsonNull()) {
            JsonArray jsonArraypackages = jsonObj.getAsJsonArray("packages");
            if (jsonArraypackages != null) {
                // ensure the json data is an array
                if (!jsonObj.get("packages").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `packages` to be an array in the JSON string but got `%s`", jsonObj.get("packages").toString()));
                }

                // validate the optional field `packages` (array)
                for (int i = 0; i < jsonArraypackages.size(); i++) {
                    GetOrderDetailResponseDataOrdersPackages.validateJsonElement(jsonArraypackages.get(i));
                }
                ;
            }
        }
        // validate the optional field `payment`
        if (jsonObj.get("payment") != null && !jsonObj.get("payment").isJsonNull()) {
            GetOrderDetailResponseDataOrdersPayment.validateJsonElement(jsonObj.get("payment"));
        }
        if ((jsonObj.get("payment_method_name") != null && !jsonObj.get("payment_method_name").isJsonNull()) && !jsonObj.get("payment_method_name").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `payment_method_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_method_name").toString()));
        }
        // validate the optional field `recipient_address`
        if (jsonObj.get("recipient_address") != null && !jsonObj.get("recipient_address").isJsonNull()) {
            GetOrderDetailResponseDataOrdersRecipientAddress.validateJsonElement(jsonObj.get("recipient_address"));
        }
        if ((jsonObj.get("replaced_order_id") != null && !jsonObj.get("replaced_order_id").isJsonNull()) && !jsonObj.get("replaced_order_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `replaced_order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("replaced_order_id").toString()));
        }
        if ((jsonObj.get("seller_note") != null && !jsonObj.get("seller_note").isJsonNull()) && !jsonObj.get("seller_note").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `seller_note` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seller_note").toString()));
        }
        if ((jsonObj.get("shipping_provider") != null && !jsonObj.get("shipping_provider").isJsonNull()) && !jsonObj.get("shipping_provider").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `shipping_provider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_provider").toString()));
        }
        if ((jsonObj.get("shipping_provider_id") != null && !jsonObj.get("shipping_provider_id").isJsonNull()) && !jsonObj.get("shipping_provider_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `shipping_provider_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_provider_id").toString()));
        }
        if ((jsonObj.get("shipping_type") != null && !jsonObj.get("shipping_type").isJsonNull()) && !jsonObj.get("shipping_type").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `shipping_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_type").toString()));
        }
        if ((jsonObj.get("split_or_combine_tag") != null && !jsonObj.get("split_or_combine_tag").isJsonNull()) && !jsonObj.get("split_or_combine_tag").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `split_or_combine_tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("split_or_combine_tag").toString()));
        }
        if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
        }
        if ((jsonObj.get("tracking_number") != null && !jsonObj.get("tracking_number").isJsonNull()) && !jsonObj.get("tracking_number").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `tracking_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_number").toString()));
        }
        if ((jsonObj.get("user_id") != null && !jsonObj.get("user_id").isJsonNull()) && !jsonObj.get("user_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_id").toString()));
        }
        if ((jsonObj.get("warehouse_id") != null && !jsonObj.get("warehouse_id").isJsonNull()) && !jsonObj.get("warehouse_id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `warehouse_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouse_id").toString()));
        }
    }

    /**
     * Create an instance of GetOrderDetailResponseDataOrders given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetOrderDetailResponseDataOrders
     * @throws IOException if the JSON string is invalid with respect to GetOrderDetailResponseDataOrders
     */
    public static GetOrderDetailResponseDataOrders fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, GetOrderDetailResponseDataOrders.class);
    }

    public GetOrderDetailResponseDataOrders autoCombineGroupId(String autoCombineGroupId) {
        this.autoCombineGroupId = autoCombineGroupId;
        return this;
    }

    /**
     * An identifier assigned to orders from the same customer during a LIVE session to facilitate combined order shipping when \&quot;auto-combination\&quot; is activated in Seller Center.
     *
     * @return autoCombineGroupId
     **/
    @javax.annotation.Nullable
    public String getAutoCombineGroupId() {
        return autoCombineGroupId;
    }

    public void setAutoCombineGroupId(String autoCombineGroupId) {
        this.autoCombineGroupId = autoCombineGroupId;
    }

    public GetOrderDetailResponseDataOrders buyerEmail(String buyerEmail) {
        this.buyerEmail = buyerEmail;
        return this;
    }

    /**
     * The anonymized email address of the buyer. It is not recommended to send messages directly to this email address. If you need to contact the buyer, please go to Seller Center - Buyer Messages page.
     *
     * @return buyerEmail
     **/
    @javax.annotation.Nullable
    public String getBuyerEmail() {
        return buyerEmail;
    }

    public void setBuyerEmail(String buyerEmail) {
        this.buyerEmail = buyerEmail;
    }

    public GetOrderDetailResponseDataOrders buyerMessage(String buyerMessage) {
        this.buyerMessage = buyerMessage;
        return this;
    }

    /**
     * The note from buyer.
     *
     * @return buyerMessage
     **/
    @javax.annotation.Nullable
    public String getBuyerMessage() {
        return buyerMessage;
    }

    public void setBuyerMessage(String buyerMessage) {
        this.buyerMessage = buyerMessage;
    }

    public GetOrderDetailResponseDataOrders cancelOrderSlaTime(Long cancelOrderSlaTime) {
        this.cancelOrderSlaTime = cancelOrderSlaTime;
        return this;
    }

    /**
     * The automatic cancellation time for orders specified by the platform. Unix timestamp.
     *
     * @return cancelOrderSlaTime
     **/
    @javax.annotation.Nullable
    public Long getCancelOrderSlaTime() {
        return cancelOrderSlaTime;
    }

    public void setCancelOrderSlaTime(Long cancelOrderSlaTime) {
        this.cancelOrderSlaTime = cancelOrderSlaTime;
    }

    public GetOrderDetailResponseDataOrders cancelReason(String cancelReason) {
        this.cancelReason = cancelReason;
        return this;
    }

    /**
     * The reason for cancelling. [See here](https://partner.tiktokshop.com/docv2/page/650b28280fcef602bf435096#Back%20To%20Top) for more information.
     *
     * @return cancelReason
     **/
    @javax.annotation.Nullable
    public String getCancelReason() {
        return cancelReason;
    }

    public void setCancelReason(String cancelReason) {
        this.cancelReason = cancelReason;
    }

    public GetOrderDetailResponseDataOrders cancelTime(Long cancelTime) {
        this.cancelTime = cancelTime;
        return this;
    }

    /**
     * The timestamp of the order&#39;s status update to &#x60;CANCELLED&#x60;.
     *
     * @return cancelTime
     **/
    @javax.annotation.Nullable
    public Long getCancelTime() {
        return cancelTime;
    }

    public void setCancelTime(Long cancelTime) {
        this.cancelTime = cancelTime;
    }

    public GetOrderDetailResponseDataOrders cancellationInitiator(String cancellationInitiator) {
        this.cancellationInitiator = cancellationInitiator;
        return this;
    }

    /**
     * The initiator of a cancellation request. Possible values:  - &#x60;SELLER&#x60; - &#x60;BUYER&#x60; - &#x60;SYSTEM&#x60;
     *
     * @return cancellationInitiator
     **/
    @javax.annotation.Nullable
    public String getCancellationInitiator() {
        return cancellationInitiator;
    }

    public void setCancellationInitiator(String cancellationInitiator) {
        this.cancellationInitiator = cancellationInitiator;
    }

    public GetOrderDetailResponseDataOrders collectionDueTime(Long collectionDueTime) {
        this.collectionDueTime = collectionDueTime;
        return this;
    }

    /**
     * If the order hasn&#39;t updated its status to &#x60;IN_TRANSIT&#x60; before this time, the order will be automatically canceled by TikTok Shop
     *
     * @return collectionDueTime
     **/
    @javax.annotation.Nullable
    public Long getCollectionDueTime() {
        return collectionDueTime;
    }

    public void setCollectionDueTime(Long collectionDueTime) {
        this.collectionDueTime = collectionDueTime;
    }

    public GetOrderDetailResponseDataOrders collectionTime(Long collectionTime) {
        this.collectionTime = collectionTime;
        return this;
    }

    /**
     * The timestamp of the order&#39;s status update to &#x60;IN_TRANSIT&#x60;.
     *
     * @return collectionTime
     **/
    @javax.annotation.Nullable
    public Long getCollectionTime() {
        return collectionTime;
    }

    public void setCollectionTime(Long collectionTime) {
        this.collectionTime = collectionTime;
    }

    public GetOrderDetailResponseDataOrders commercePlatform(String commercePlatform) {
        this.commercePlatform = commercePlatform;
        return this;
    }

    /**
     * The platform where the order was placed. Possible values: - TIKTOK_SHOP - TOKOPEDIA  **Note**: Available only in the Indonesia market.
     *
     * @return commercePlatform
     **/
    @javax.annotation.Nullable
    public String getCommercePlatform() {
        return commercePlatform;
    }

    public void setCommercePlatform(String commercePlatform) {
        this.commercePlatform = commercePlatform;
    }

    public GetOrderDetailResponseDataOrders consultationId(String consultationId) {
        this.consultationId = consultationId;
        return this;
    }

    /**
     * An ID to identify the corresponding ePharmacy consultation.  Applicable only if an ePharmacy consultation was initiated. Not applicable if the prescription was provided by the customer through an image upload.
     *
     * @return consultationId
     **/
    @javax.annotation.Nullable
    public String getConsultationId() {
        return consultationId;
    }

    public void setConsultationId(String consultationId) {
        this.consultationId = consultationId;
    }

    public GetOrderDetailResponseDataOrders cpf(String cpf) {
        this.cpf = cpf;
        return this;
    }

    /**
     * CPF (invoice number), used to issue an invoice. Exclusive for the Brazil market.
     *
     * @return cpf
     **/
    @javax.annotation.Nullable
    public String getCpf() {
        return cpf;
    }

    public void setCpf(String cpf) {
        this.cpf = cpf;
    }

    public GetOrderDetailResponseDataOrders cpfName(String cpfName) {
        this.cpfName = cpfName;
        return this;
    }

    /**
     * Name belonging to the CPF number for the Brazil market.
     *
     * @return cpfName
     **/
    @javax.annotation.Nullable
    public String getCpfName() {
        return cpfName;
    }

    public void setCpfName(String cpfName) {
        this.cpfName = cpfName;
    }

    public GetOrderDetailResponseDataOrders createTime(Long createTime) {
        this.createTime = createTime;
        return this;
    }

    /**
     * The date and time that the order was created. Unix timestamp.
     *
     * @return createTime
     **/
    @javax.annotation.Nullable
    public Long getCreateTime() {
        return createTime;
    }

    public void setCreateTime(Long createTime) {
        this.createTime = createTime;
    }

    public GetOrderDetailResponseDataOrders deliveryDueTime(Long deliveryDueTime) {
        this.deliveryDueTime = deliveryDueTime;
        return this;
    }

    /**
     * If the order hasn&#39;t updated its status to &#x60;DELIVERED&#x60; before this time, the order will be automatically canceled by TikTok Shop.
     *
     * @return deliveryDueTime
     **/
    @javax.annotation.Nullable
    public Long getDeliveryDueTime() {
        return deliveryDueTime;
    }

    public void setDeliveryDueTime(Long deliveryDueTime) {
        this.deliveryDueTime = deliveryDueTime;
    }

    public GetOrderDetailResponseDataOrders deliveryOptionId(String deliveryOptionId) {
        this.deliveryOptionId = deliveryOptionId;
        return this;
    }

    /**
     * Order delivery option ID.
     *
     * @return deliveryOptionId
     **/
    @javax.annotation.Nullable
    public String getDeliveryOptionId() {
        return deliveryOptionId;
    }

    public void setDeliveryOptionId(String deliveryOptionId) {
        this.deliveryOptionId = deliveryOptionId;
    }

    public GetOrderDetailResponseDataOrders deliveryOptionName(String deliveryOptionName) {
        this.deliveryOptionName = deliveryOptionName;
        return this;
    }

    /**
     * Delivery option name. For display purposes only.
     *
     * @return deliveryOptionName
     **/
    @javax.annotation.Nullable
    public String getDeliveryOptionName() {
        return deliveryOptionName;
    }

    public void setDeliveryOptionName(String deliveryOptionName) {
        this.deliveryOptionName = deliveryOptionName;
    }

    public GetOrderDetailResponseDataOrders deliveryOptionRequiredDeliveryTime(Long deliveryOptionRequiredDeliveryTime) {
        this.deliveryOptionRequiredDeliveryTime = deliveryOptionRequiredDeliveryTime;
        return this;
    }

    /**
     * Order should be delivered before this time.
     *
     * @return deliveryOptionRequiredDeliveryTime
     **/
    @javax.annotation.Nullable
    public Long getDeliveryOptionRequiredDeliveryTime() {
        return deliveryOptionRequiredDeliveryTime;
    }

    public void setDeliveryOptionRequiredDeliveryTime(Long deliveryOptionRequiredDeliveryTime) {
        this.deliveryOptionRequiredDeliveryTime = deliveryOptionRequiredDeliveryTime;
    }

    public GetOrderDetailResponseDataOrders deliverySlaTime(Long deliverySlaTime) {
        this.deliverySlaTime = deliverySlaTime;
        return this;
    }

    /**
     * Order should arrive by this date to be considered on-time and to avoid late delivery penalties.
     *
     * @return deliverySlaTime
     **/
    @javax.annotation.Nullable
    public Long getDeliverySlaTime() {
        return deliverySlaTime;
    }

    public void setDeliverySlaTime(Long deliverySlaTime) {
        this.deliverySlaTime = deliverySlaTime;
    }

    public GetOrderDetailResponseDataOrders deliveryTime(Long deliveryTime) {
        this.deliveryTime = deliveryTime;
        return this;
    }

    /**
     * The timestamp of the order&#39;s status update to &#x60;DELIVERED&#x60;.
     *
     * @return deliveryTime
     **/
    @javax.annotation.Nullable
    public Long getDeliveryTime() {
        return deliveryTime;
    }

    public void setDeliveryTime(Long deliveryTime) {
        this.deliveryTime = deliveryTime;
    }

    public GetOrderDetailResponseDataOrders deliveryType(String deliveryType) {
        this.deliveryType = deliveryType;
        return this;
    }

    /**
     * Indicates whether it is a PickUp DropOff (PUDO) location. The PUDO location is selected by the buyer when placing orders.  - &#x60;HOME_DELIVERY&#x60;: not a PUDO location - &#x60;COLLECTION_POINT&#x60;: a PUDO location
     *
     * @return deliveryType
     **/
    @javax.annotation.Nullable
    public String getDeliveryType() {
        return deliveryType;
    }

    public void setDeliveryType(String deliveryType) {
        this.deliveryType = deliveryType;
    }

    public GetOrderDetailResponseDataOrders exchangeSourceOrderId(String exchangeSourceOrderId) {
        this.exchangeSourceOrderId = exchangeSourceOrderId;
        return this;
    }

    /**
     * If the order is an exchange order, this field returns the original order&#39;s order ID, from which the exchange order was generated.   Returned only if is_exchange_order &#x3D; true.  Note: Only available in US and UK.
     *
     * @return exchangeSourceOrderId
     **/
    @javax.annotation.Nullable
    public String getExchangeSourceOrderId() {
        return exchangeSourceOrderId;
    }

    public void setExchangeSourceOrderId(String exchangeSourceOrderId) {
        this.exchangeSourceOrderId = exchangeSourceOrderId;
    }

    public GetOrderDetailResponseDataOrders fastDeliveryProgram(String fastDeliveryProgram) {
        this.fastDeliveryProgram = fastDeliveryProgram;
        return this;
    }

    /**
     * A badge presented on the merchandise to tell the buyer that the seller participates in the fast delivery program, such that the order should arrive in a promised time period. Possible values: - 3_DAY_DELIVERY (US) Not returned if order did not meet fast delivery program requirements. Note: Available only in US the market.
     *
     * @return fastDeliveryProgram
     **/
    @javax.annotation.Nullable
    public String getFastDeliveryProgram() {
        return fastDeliveryProgram;
    }

    public void setFastDeliveryProgram(String fastDeliveryProgram) {
        this.fastDeliveryProgram = fastDeliveryProgram;
    }

    public GetOrderDetailResponseDataOrders fastDispatchSlaTime(Long fastDispatchSlaTime) {
        this.fastDispatchSlaTime = fastDispatchSlaTime;
        return this;
    }

    /**
     * The latest collection time to gain incentives of NDD (Next Day Delivery) project. Unix timestamp Only available in Thailand and Philippines.
     *
     * @return fastDispatchSlaTime
     **/
    @javax.annotation.Nullable
    public Long getFastDispatchSlaTime() {
        return fastDispatchSlaTime;
    }

    public void setFastDispatchSlaTime(Long fastDispatchSlaTime) {
        this.fastDispatchSlaTime = fastDispatchSlaTime;
    }

    public GetOrderDetailResponseDataOrders fulfillmentType(String fulfillmentType) {
        this.fulfillmentType = fulfillmentType;
        return this;
    }

    /**
     * Fulfillment type.  Only orders with fulfillment type can be shipped by sellers. Possible values: - &#x60;FULFILLMENT_BY_SELLER&#x60;: a method where sellers fulfill orders directly from their own inventory, without using TikTok&#39;s fulfillment centers. In this model, the seller is responsible for storing, packaging, and shipping the product to customers. - &#x60;FULFILLMENT_BY_TIKTOK&#x60;: a service offered by TikTok that enables sellers to send their products to TikTok&#39;s fulfillment centers. TikTok then takes care of storing, picking, packing, and shipping the products to customers. - &#x60;FULFILLMENT_BY_DILAYANI_TOKOPEDIA&#x60;: a method where Tokopedia GoTo Logistics provides warehousing and logistics services to sellers and charges a fee for the service.
     *
     * @return fulfillmentType
     **/
    @javax.annotation.Nullable
    public String getFulfillmentType() {
        return fulfillmentType;
    }

    public void setFulfillmentType(String fulfillmentType) {
        this.fulfillmentType = fulfillmentType;
    }

    public GetOrderDetailResponseDataOrders handlingDuration(GetOrderDetailResponseDataOrdersHandlingDuration handlingDuration) {
        this.handlingDuration = handlingDuration;
        return this;
    }

    /**
     * Get handlingDuration
     *
     * @return handlingDuration
     **/
    @javax.annotation.Nullable
    public GetOrderDetailResponseDataOrdersHandlingDuration getHandlingDuration() {
        return handlingDuration;
    }

    public void setHandlingDuration(GetOrderDetailResponseDataOrdersHandlingDuration handlingDuration) {
        this.handlingDuration = handlingDuration;
    }

    public GetOrderDetailResponseDataOrders hasUpdatedRecipientAddress(Boolean hasUpdatedRecipientAddress) {
        this.hasUpdatedRecipientAddress = hasUpdatedRecipientAddress;
        return this;
    }

    /**
     * Whether the recipient address has been updated. - &#x60;false&#x60;: no update - &#x60;true&#x60;: updated
     *
     * @return hasUpdatedRecipientAddress
     **/
    @javax.annotation.Nullable
    public Boolean getHasUpdatedRecipientAddress() {
        return hasUpdatedRecipientAddress;
    }

    public void setHasUpdatedRecipientAddress(Boolean hasUpdatedRecipientAddress) {
        this.hasUpdatedRecipientAddress = hasUpdatedRecipientAddress;
    }

    public GetOrderDetailResponseDataOrders id(String id) {
        this.id = id;
        return this;
    }

    /**
     * A unique identifier for a TikTok Shop order.
     *
     * @return id
     **/
    @javax.annotation.Nullable
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public GetOrderDetailResponseDataOrders isBuyerRequestCancel(Boolean isBuyerRequestCancel) {
        this.isBuyerRequestCancel = isBuyerRequestCancel;
        return this;
    }

    /**
     * True when the buyer has a pending cancellation request
     *
     * @return isBuyerRequestCancel
     **/
    @javax.annotation.Nullable
    public Boolean getIsBuyerRequestCancel() {
        return isBuyerRequestCancel;
    }

    public void setIsBuyerRequestCancel(Boolean isBuyerRequestCancel) {
        this.isBuyerRequestCancel = isBuyerRequestCancel;
    }

    public GetOrderDetailResponseDataOrders isCod(Boolean isCod) {
        this.isCod = isCod;
        return this;
    }

    /**
     * This option is for sellers that accept cash payment on delivery which is rare. Buyers will pay in cash upon receipt of package. Default value is &#x60;FALSE&#x60;. Only applicable to countries where Cash on Delivery (COD) is supported.
     *
     * @return isCod
     **/
    @javax.annotation.Nullable
    public Boolean getIsCod() {
        return isCod;
    }

    public void setIsCod(Boolean isCod) {
        this.isCod = isCod;
    }

    public GetOrderDetailResponseDataOrders isExchangeOrder(Boolean isExchangeOrder) {
        this.isExchangeOrder = isExchangeOrder;
        return this;
    }

    /**
     * When TRUE, this is an exchange order.  Note: Only available in US and UK.
     *
     * @return isExchangeOrder
     **/
    @javax.annotation.Nullable
    public Boolean getIsExchangeOrder() {
        return isExchangeOrder;
    }

    public void setIsExchangeOrder(Boolean isExchangeOrder) {
        this.isExchangeOrder = isExchangeOrder;
    }

    public GetOrderDetailResponseDataOrders isOnHoldOrder(Boolean isOnHoldOrder) {
        this.isOnHoldOrder = isOnHoldOrder;
        return this;
    }

    /**
     * Indicates whether the order experienced or will be experienced &#x60;ON_HOLD&#x60; status.
     *
     * @return isOnHoldOrder
     **/
    @javax.annotation.Nullable
    public Boolean getIsOnHoldOrder() {
        return isOnHoldOrder;
    }

    public void setIsOnHoldOrder(Boolean isOnHoldOrder) {
        this.isOnHoldOrder = isOnHoldOrder;
    }

    public GetOrderDetailResponseDataOrders isReplacementOrder(Boolean isReplacementOrder) {
        this.isReplacementOrder = isReplacementOrder;
        return this;
    }

    /**
     * When true, this is a replacement order.
     *
     * @return isReplacementOrder
     **/
    @javax.annotation.Nullable
    public Boolean getIsReplacementOrder() {
        return isReplacementOrder;
    }

    public void setIsReplacementOrder(Boolean isReplacementOrder) {
        this.isReplacementOrder = isReplacementOrder;
    }

    public GetOrderDetailResponseDataOrders isSampleOrder(Boolean isSampleOrder) {
        this.isSampleOrder = isSampleOrder;
        return this;
    }

    /**
     * Use this field to determine whether the order is a sample order.
     *
     * @return isSampleOrder
     **/
    @javax.annotation.Nullable
    public Boolean getIsSampleOrder() {
        return isSampleOrder;
    }

    public void setIsSampleOrder(Boolean isSampleOrder) {
        this.isSampleOrder = isSampleOrder;
    }

    public GetOrderDetailResponseDataOrders lineItems(List<GetOrderDetailResponseDataOrdersLineItems> lineItems) {
        this.lineItems = lineItems;
        return this;
    }

    public GetOrderDetailResponseDataOrders addLineItemsItem(GetOrderDetailResponseDataOrdersLineItems lineItemsItem) {
        if (this.lineItems == null) {
            this.lineItems = new ArrayList<>();
        }
        this.lineItems.add(lineItemsItem);
        return this;
    }

    /**
     * Line item info list.
     *
     * @return lineItems
     **/
    @javax.annotation.Nullable
    public List<GetOrderDetailResponseDataOrdersLineItems> getLineItems() {
        return lineItems;
    }

    public void setLineItems(List<GetOrderDetailResponseDataOrdersLineItems> lineItems) {
        this.lineItems = lineItems;
    }

    public GetOrderDetailResponseDataOrders needUploadInvoice(String needUploadInvoice) {
        this.needUploadInvoice = needUploadInvoice;
        return this;
    }

    /**
     * Whether an invoice needs to be uploaded (only for Brazil market). - &#x60;UNKNOWN&#x60; - &#x60;NEED_INVOICE&#x60; - &#x60;NO_NEED&#x60; - &#x60;INVOICE_UPLOADED&#x60;
     *
     * @return needUploadInvoice
     **/
    @javax.annotation.Nullable
    public String getNeedUploadInvoice() {
        return needUploadInvoice;
    }

    public void setNeedUploadInvoice(String needUploadInvoice) {
        this.needUploadInvoice = needUploadInvoice;
    }

    public GetOrderDetailResponseDataOrders orderType(String orderType) {
        this.orderType = orderType;
        return this;
    }

    /**
     * The order type. Possible values based on region:  **All regions** - &#x60;ZERO_LOTTERY&#x60;: An order placed during a lottery event in TikTok LIVE.  **US** - &#x60;PRE_ORDER&#x60;: An advance order for items that are not yet available or released. Fulfillment starts on a specific date in the future. - &#x60;MADE_TO_ORDER&#x60;: An order for items that are produced only after the order is received. Fulfillment starts after the product is produced. - &#x60;BACK_ORDER&#x60;: An order for items that are out of stock but expected to be restocked. Fulfillment starts after the product is restocked.  Returns an empty value for standard orders or other types that don&#39;t fall into the above categories.
     *
     * @return orderType
     **/
    @javax.annotation.Nullable
    public String getOrderType() {
        return orderType;
    }

    public void setOrderType(String orderType) {
        this.orderType = orderType;
    }

    public GetOrderDetailResponseDataOrders packages(List<GetOrderDetailResponseDataOrdersPackages> packages) {
        this.packages = packages;
        return this;
    }

    public GetOrderDetailResponseDataOrders addPackagesItem(GetOrderDetailResponseDataOrdersPackages packagesItem) {
        if (this.packages == null) {
            this.packages = new ArrayList<>();
        }
        this.packages.add(packagesItem);
        return this;
    }

    /**
     * List of packages included in this order
     *
     * @return packages
     **/
    @javax.annotation.Nullable
    public List<GetOrderDetailResponseDataOrdersPackages> getPackages() {
        return packages;
    }

    public void setPackages(List<GetOrderDetailResponseDataOrdersPackages> packages) {
        this.packages = packages;
    }

    public GetOrderDetailResponseDataOrders paidTime(Long paidTime) {
        this.paidTime = paidTime;
        return this;
    }

    /**
     * The date and time that the order was paid. Unix timestamp.
     *
     * @return paidTime
     **/
    @javax.annotation.Nullable
    public Long getPaidTime() {
        return paidTime;
    }

    public void setPaidTime(Long paidTime) {
        this.paidTime = paidTime;
    }

    public GetOrderDetailResponseDataOrders payment(GetOrderDetailResponseDataOrdersPayment payment) {
        this.payment = payment;
        return this;
    }

    /**
     * Get payment
     *
     * @return payment
     **/
    @javax.annotation.Nullable
    public GetOrderDetailResponseDataOrdersPayment getPayment() {
        return payment;
    }

    public void setPayment(GetOrderDetailResponseDataOrdersPayment payment) {
        this.payment = payment;
    }

    public GetOrderDetailResponseDataOrders paymentMethodName(String paymentMethodName) {
        this.paymentMethodName = paymentMethodName;
        return this;
    }

    /**
     * Payment method name, only for display
     *
     * @return paymentMethodName
     **/
    @javax.annotation.Nullable
    public String getPaymentMethodName() {
        return paymentMethodName;
    }

    public void setPaymentMethodName(String paymentMethodName) {
        this.paymentMethodName = paymentMethodName;
    }

    public GetOrderDetailResponseDataOrders pickUpCutOffTime(Long pickUpCutOffTime) {
        this.pickUpCutOffTime = pickUpCutOffTime;
        return this;
    }

    /**
     * To avoid LDR, you must ensure the package is picked up by this time. Only applicable in Southeast Asia regions.
     *
     * @return pickUpCutOffTime
     **/
    @javax.annotation.Nullable
    public Long getPickUpCutOffTime() {
        return pickUpCutOffTime;
    }

    public void setPickUpCutOffTime(Long pickUpCutOffTime) {
        this.pickUpCutOffTime = pickUpCutOffTime;
    }

    public GetOrderDetailResponseDataOrders recipientAddress(GetOrderDetailResponseDataOrdersRecipientAddress recipientAddress) {
        this.recipientAddress = recipientAddress;
        return this;
    }

    /**
     * Get recipientAddress
     *
     * @return recipientAddress
     **/
    @javax.annotation.Nullable
    public GetOrderDetailResponseDataOrdersRecipientAddress getRecipientAddress() {
        return recipientAddress;
    }

    public void setRecipientAddress(GetOrderDetailResponseDataOrdersRecipientAddress recipientAddress) {
        this.recipientAddress = recipientAddress;
    }

    public GetOrderDetailResponseDataOrders releaseDate(Long releaseDate) {
        this.releaseDate = releaseDate;
        return this;
    }

    /**
     * The date on which order handling starts and the status of the order changes to [&#x60;AWAITING_SHIPMENT&#x60;](https://partner.tiktokshop.com/docv2/page/650b1b4bbace3e02b76d1011).  Applicable only if the &#x60;order_type&#x60; is &#x60;PRE_ORDER&#x60;.
     *
     * @return releaseDate
     **/
    @javax.annotation.Nullable
    public Long getReleaseDate() {
        return releaseDate;
    }

    public void setReleaseDate(Long releaseDate) {
        this.releaseDate = releaseDate;
    }

    public GetOrderDetailResponseDataOrders replacedOrderId(String replacedOrderId) {
        this.replacedOrderId = replacedOrderId;
        return this;
    }

    /**
     * The order ID for the order that is being replaced. Returned only if &#x60;is_replacement_order&#x60; &#x3D; &#x60;true&#x60;
     *
     * @return replacedOrderId
     **/
    @javax.annotation.Nullable
    public String getReplacedOrderId() {
        return replacedOrderId;
    }

    public void setReplacedOrderId(String replacedOrderId) {
        this.replacedOrderId = replacedOrderId;
    }

    public GetOrderDetailResponseDataOrders requestCancelTime(Long requestCancelTime) {
        this.requestCancelTime = requestCancelTime;
        return this;
    }

    /**
     * Buyer request cancel time.
     *
     * @return requestCancelTime
     **/
    @javax.annotation.Nullable
    public Long getRequestCancelTime() {
        return requestCancelTime;
    }

    public void setRequestCancelTime(Long requestCancelTime) {
        this.requestCancelTime = requestCancelTime;
    }

    public GetOrderDetailResponseDataOrders rtsSlaTime(Long rtsSlaTime) {
        this.rtsSlaTime = rtsSlaTime;
        return this;
    }

    /**
     * The latest shipping time specified by the platform. Unix timestamp.
     *
     * @return rtsSlaTime
     **/
    @javax.annotation.Nullable
    public Long getRtsSlaTime() {
        return rtsSlaTime;
    }

    public void setRtsSlaTime(Long rtsSlaTime) {
        this.rtsSlaTime = rtsSlaTime;
    }

    public GetOrderDetailResponseDataOrders rtsTime(Long rtsTime) {
        this.rtsTime = rtsTime;
        return this;
    }

    /**
     * The time seller shipped the order (call Ship Order endpoint successfully). Unix timestamp.
     *
     * @return rtsTime
     **/
    @javax.annotation.Nullable
    public Long getRtsTime() {
        return rtsTime;
    }

    public void setRtsTime(Long rtsTime) {
        this.rtsTime = rtsTime;
    }

    public GetOrderDetailResponseDataOrders sellerNote(String sellerNote) {
        this.sellerNote = sellerNote;
        return this;
    }

    /**
     * This field return the note, which seller notes in TikTok Seller Center.
     *
     * @return sellerNote
     **/
    @javax.annotation.Nullable
    public String getSellerNote() {
        return sellerNote;
    }

    public void setSellerNote(String sellerNote) {
        this.sellerNote = sellerNote;
    }

    public GetOrderDetailResponseDataOrders shippingDueTime(Long shippingDueTime) {
        this.shippingDueTime = shippingDueTime;
        return this;
    }

    /**
     * If the order hasn&#39;t updated its status to &#x60;AWAITING_COLLECTION&#x60; before this time, the order will be automatically canceled by TikTok Shop.
     *
     * @return shippingDueTime
     **/
    @javax.annotation.Nullable
    public Long getShippingDueTime() {
        return shippingDueTime;
    }

    public void setShippingDueTime(Long shippingDueTime) {
        this.shippingDueTime = shippingDueTime;
    }

    public GetOrderDetailResponseDataOrders shippingProvider(String shippingProvider) {
        this.shippingProvider = shippingProvider;
        return this;
    }

    /**
     * The name of the current shipping provider.
     *
     * @return shippingProvider
     **/
    @javax.annotation.Nullable
    public String getShippingProvider() {
        return shippingProvider;
    }

    public void setShippingProvider(String shippingProvider) {
        this.shippingProvider = shippingProvider;
    }

    public GetOrderDetailResponseDataOrders shippingProviderId(String shippingProviderId) {
        this.shippingProviderId = shippingProviderId;
        return this;
    }

    /**
     * The ID of the current shipping provider.
     *
     * @return shippingProviderId
     **/
    @javax.annotation.Nullable
    public String getShippingProviderId() {
        return shippingProviderId;
    }

    public void setShippingProviderId(String shippingProviderId) {
        this.shippingProviderId = shippingProviderId;
    }

    public GetOrderDetailResponseDataOrders shippingType(String shippingType) {
        this.shippingType = shippingType;
        return this;
    }

    /**
     * The method of delivery. - &#x60;TIKTOK&#x60;: shipping service provided by TikTok. The seller should obtain shipping label from TikTok. - &#x60;SELLER&#x60;: seller provides shipping, including through 3rd party fulfillment providers on behalf of the seller.
     *
     * @return shippingType
     **/
    @javax.annotation.Nullable
    public String getShippingType() {
        return shippingType;
    }

    public void setShippingType(String shippingType) {
        this.shippingType = shippingType;
    }

    public GetOrderDetailResponseDataOrders splitOrCombineTag(String splitOrCombineTag) {
        this.splitOrCombineTag = splitOrCombineTag;
        return this;
    }

    /**
     * Indicate whether the order is combined or split.  - &#x60;COMBINED&#x60; - &#x60;SPLIT&#x60;  This field will be used in future fulfillment apis.
     *
     * @return splitOrCombineTag
     **/
    @javax.annotation.Nullable
    public String getSplitOrCombineTag() {
        return splitOrCombineTag;
    }

    public void setSplitOrCombineTag(String splitOrCombineTag) {
        this.splitOrCombineTag = splitOrCombineTag;
    }

    public GetOrderDetailResponseDataOrders status(String status) {
        this.status = status;
        return this;
    }

    /**
     * The order status. Possible values: - &#x60;UNPAID&#x60;: The order is placed, but payment is not yet completed. - &#x60;ON_HOLD&#x60;: The order is accepted and is waiting for fulfillment so the buyer may still cancel without the seller’s approval. If &#x60;order_type&#x3D;PRE_ORDER&#x60;, it also means the product is still awaiting release so payment will only be authorized 1 day before the release, but the seller should start preparing for the release. - &#x60;AWAITING_SHIPMENT&#x60;: The order is ready for shipment, but no items are shipped yet. - &#x60;PARTIALLY_SHIPPING&#x60;: Some items in the order are shipped, but not all. - &#x60;AWAITING_COLLECTION&#x60;: The shipment is arranged, but the package is waiting to be collected by the carrier. - &#x60;IN_TRANSIT&#x60;: The package is collected by the carrier and delivery is in progress. - &#x60;DELIVERED&#x60;: The package is delivered to buyer. - &#x60;COMPLETED&#x60;: The order is completed, and no further returns or refunds are allowed. - &#x60;CANCELLED&#x60;: The order is cancelled.
     *
     * @return status
     **/
    @javax.annotation.Nullable
    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public GetOrderDetailResponseDataOrders trackingNumber(String trackingNumber) {
        this.trackingNumber = trackingNumber;
        return this;
    }

    /**
     * Tracking number. Available after ship package.
     *
     * @return trackingNumber
     **/
    @javax.annotation.Nullable
    public String getTrackingNumber() {
        return trackingNumber;
    }

    public void setTrackingNumber(String trackingNumber) {
        this.trackingNumber = trackingNumber;
    }

    public GetOrderDetailResponseDataOrders ttsSlaTime(Long ttsSlaTime) {
        this.ttsSlaTime = ttsSlaTime;
        return this;
    }

    /**
     * The latest collection time specified by the platform. Unix timestamp.
     *
     * @return ttsSlaTime
     **/
    @javax.annotation.Nullable
    public Long getTtsSlaTime() {
        return ttsSlaTime;
    }

    public void setTtsSlaTime(Long ttsSlaTime) {
        this.ttsSlaTime = ttsSlaTime;
    }

    public GetOrderDetailResponseDataOrders updateTime(Long updateTime) {
        this.updateTime = updateTime;
        return this;
    }

    /**
     * Time of order status changes. Unix timestamp.
     *
     * @return updateTime
     **/
    @javax.annotation.Nullable
    public Long getUpdateTime() {
        return updateTime;
    }

    public void setUpdateTime(Long updateTime) {
        this.updateTime = updateTime;
    }

    public GetOrderDetailResponseDataOrders userId(String userId) {
        this.userId = userId;
        return this;
    }

    /**
     * The buyer&#39;s user ID.
     *
     * @return userId
     **/
    @javax.annotation.Nullable
    public String getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public GetOrderDetailResponseDataOrders warehouseId(String warehouseId) {
        this.warehouseId = warehouseId;
        return this;
    }

    /**
     * seller warehouse ID.
     *
     * @return warehouseId
     **/
    @javax.annotation.Nullable
    public String getWarehouseId() {
        return warehouseId;
    }

    public void setWarehouseId(String warehouseId) {
        this.warehouseId = warehouseId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetOrderDetailResponseDataOrders order202309GetOrderDetailResponseDataOrders = (GetOrderDetailResponseDataOrders) o;
        return Objects.equals(this.autoCombineGroupId, order202309GetOrderDetailResponseDataOrders.autoCombineGroupId) &&
            Objects.equals(this.buyerEmail, order202309GetOrderDetailResponseDataOrders.buyerEmail) &&
            Objects.equals(this.buyerMessage, order202309GetOrderDetailResponseDataOrders.buyerMessage) &&
            Objects.equals(this.cancelOrderSlaTime, order202309GetOrderDetailResponseDataOrders.cancelOrderSlaTime) &&
            Objects.equals(this.cancelReason, order202309GetOrderDetailResponseDataOrders.cancelReason) &&
            Objects.equals(this.cancelTime, order202309GetOrderDetailResponseDataOrders.cancelTime) &&
            Objects.equals(this.cancellationInitiator, order202309GetOrderDetailResponseDataOrders.cancellationInitiator) &&
            Objects.equals(this.collectionDueTime, order202309GetOrderDetailResponseDataOrders.collectionDueTime) &&
            Objects.equals(this.collectionTime, order202309GetOrderDetailResponseDataOrders.collectionTime) &&
            Objects.equals(this.commercePlatform, order202309GetOrderDetailResponseDataOrders.commercePlatform) &&
            Objects.equals(this.consultationId, order202309GetOrderDetailResponseDataOrders.consultationId) &&
            Objects.equals(this.cpf, order202309GetOrderDetailResponseDataOrders.cpf) &&
            Objects.equals(this.cpfName, order202309GetOrderDetailResponseDataOrders.cpfName) &&
            Objects.equals(this.createTime, order202309GetOrderDetailResponseDataOrders.createTime) &&
            Objects.equals(this.deliveryDueTime, order202309GetOrderDetailResponseDataOrders.deliveryDueTime) &&
            Objects.equals(this.deliveryOptionId, order202309GetOrderDetailResponseDataOrders.deliveryOptionId) &&
            Objects.equals(this.deliveryOptionName, order202309GetOrderDetailResponseDataOrders.deliveryOptionName) &&
            Objects.equals(this.deliveryOptionRequiredDeliveryTime, order202309GetOrderDetailResponseDataOrders.deliveryOptionRequiredDeliveryTime) &&
            Objects.equals(this.deliverySlaTime, order202309GetOrderDetailResponseDataOrders.deliverySlaTime) &&
            Objects.equals(this.deliveryTime, order202309GetOrderDetailResponseDataOrders.deliveryTime) &&
            Objects.equals(this.deliveryType, order202309GetOrderDetailResponseDataOrders.deliveryType) &&
            Objects.equals(this.exchangeSourceOrderId, order202309GetOrderDetailResponseDataOrders.exchangeSourceOrderId) &&
            Objects.equals(this.fastDeliveryProgram, order202309GetOrderDetailResponseDataOrders.fastDeliveryProgram) &&
            Objects.equals(this.fastDispatchSlaTime, order202309GetOrderDetailResponseDataOrders.fastDispatchSlaTime) &&
            Objects.equals(this.fulfillmentType, order202309GetOrderDetailResponseDataOrders.fulfillmentType) &&
            Objects.equals(this.handlingDuration, order202309GetOrderDetailResponseDataOrders.handlingDuration) &&
            Objects.equals(this.hasUpdatedRecipientAddress, order202309GetOrderDetailResponseDataOrders.hasUpdatedRecipientAddress) &&
            Objects.equals(this.id, order202309GetOrderDetailResponseDataOrders.id) &&
            Objects.equals(this.isBuyerRequestCancel, order202309GetOrderDetailResponseDataOrders.isBuyerRequestCancel) &&
            Objects.equals(this.isCod, order202309GetOrderDetailResponseDataOrders.isCod) &&
            Objects.equals(this.isExchangeOrder, order202309GetOrderDetailResponseDataOrders.isExchangeOrder) &&
            Objects.equals(this.isOnHoldOrder, order202309GetOrderDetailResponseDataOrders.isOnHoldOrder) &&
            Objects.equals(this.isReplacementOrder, order202309GetOrderDetailResponseDataOrders.isReplacementOrder) &&
            Objects.equals(this.isSampleOrder, order202309GetOrderDetailResponseDataOrders.isSampleOrder) &&
            Objects.equals(this.lineItems, order202309GetOrderDetailResponseDataOrders.lineItems) &&
            Objects.equals(this.needUploadInvoice, order202309GetOrderDetailResponseDataOrders.needUploadInvoice) &&
            Objects.equals(this.orderType, order202309GetOrderDetailResponseDataOrders.orderType) &&
            Objects.equals(this.packages, order202309GetOrderDetailResponseDataOrders.packages) &&
            Objects.equals(this.paidTime, order202309GetOrderDetailResponseDataOrders.paidTime) &&
            Objects.equals(this.payment, order202309GetOrderDetailResponseDataOrders.payment) &&
            Objects.equals(this.paymentMethodName, order202309GetOrderDetailResponseDataOrders.paymentMethodName) &&
            Objects.equals(this.pickUpCutOffTime, order202309GetOrderDetailResponseDataOrders.pickUpCutOffTime) &&
            Objects.equals(this.recipientAddress, order202309GetOrderDetailResponseDataOrders.recipientAddress) &&
            Objects.equals(this.releaseDate, order202309GetOrderDetailResponseDataOrders.releaseDate) &&
            Objects.equals(this.replacedOrderId, order202309GetOrderDetailResponseDataOrders.replacedOrderId) &&
            Objects.equals(this.requestCancelTime, order202309GetOrderDetailResponseDataOrders.requestCancelTime) &&
            Objects.equals(this.rtsSlaTime, order202309GetOrderDetailResponseDataOrders.rtsSlaTime) &&
            Objects.equals(this.rtsTime, order202309GetOrderDetailResponseDataOrders.rtsTime) &&
            Objects.equals(this.sellerNote, order202309GetOrderDetailResponseDataOrders.sellerNote) &&
            Objects.equals(this.shippingDueTime, order202309GetOrderDetailResponseDataOrders.shippingDueTime) &&
            Objects.equals(this.shippingProvider, order202309GetOrderDetailResponseDataOrders.shippingProvider) &&
            Objects.equals(this.shippingProviderId, order202309GetOrderDetailResponseDataOrders.shippingProviderId) &&
            Objects.equals(this.shippingType, order202309GetOrderDetailResponseDataOrders.shippingType) &&
            Objects.equals(this.splitOrCombineTag, order202309GetOrderDetailResponseDataOrders.splitOrCombineTag) &&
            Objects.equals(this.status, order202309GetOrderDetailResponseDataOrders.status) &&
            Objects.equals(this.trackingNumber, order202309GetOrderDetailResponseDataOrders.trackingNumber) &&
            Objects.equals(this.ttsSlaTime, order202309GetOrderDetailResponseDataOrders.ttsSlaTime) &&
            Objects.equals(this.updateTime, order202309GetOrderDetailResponseDataOrders.updateTime) &&
            Objects.equals(this.userId, order202309GetOrderDetailResponseDataOrders.userId) &&
            Objects.equals(this.warehouseId, order202309GetOrderDetailResponseDataOrders.warehouseId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(autoCombineGroupId, buyerEmail, buyerMessage, cancelOrderSlaTime, cancelReason, cancelTime, cancellationInitiator, collectionDueTime, collectionTime, commercePlatform, consultationId, cpf, cpfName, createTime, deliveryDueTime, deliveryOptionId, deliveryOptionName, deliveryOptionRequiredDeliveryTime, deliverySlaTime, deliveryTime, deliveryType, exchangeSourceOrderId, fastDeliveryProgram, fastDispatchSlaTime, fulfillmentType, handlingDuration, hasUpdatedRecipientAddress, id, isBuyerRequestCancel, isCod, isExchangeOrder, isOnHoldOrder, isReplacementOrder, isSampleOrder, lineItems, needUploadInvoice, orderType, packages, paidTime, payment, paymentMethodName, pickUpCutOffTime, recipientAddress, releaseDate, replacedOrderId, requestCancelTime, rtsSlaTime, rtsTime, sellerNote, shippingDueTime, shippingProvider, shippingProviderId, shippingType, splitOrCombineTag, status, trackingNumber, ttsSlaTime, updateTime, userId, warehouseId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetOrderDetailResponseDataOrders {\n");
        sb.append("    autoCombineGroupId: ").append(toIndentedString(autoCombineGroupId)).append("\n");
        sb.append("    buyerEmail: ").append(toIndentedString(buyerEmail)).append("\n");
        sb.append("    buyerMessage: ").append(toIndentedString(buyerMessage)).append("\n");
        sb.append("    cancelOrderSlaTime: ").append(toIndentedString(cancelOrderSlaTime)).append("\n");
        sb.append("    cancelReason: ").append(toIndentedString(cancelReason)).append("\n");
        sb.append("    cancelTime: ").append(toIndentedString(cancelTime)).append("\n");
        sb.append("    cancellationInitiator: ").append(toIndentedString(cancellationInitiator)).append("\n");
        sb.append("    collectionDueTime: ").append(toIndentedString(collectionDueTime)).append("\n");
        sb.append("    collectionTime: ").append(toIndentedString(collectionTime)).append("\n");
        sb.append("    commercePlatform: ").append(toIndentedString(commercePlatform)).append("\n");
        sb.append("    consultationId: ").append(toIndentedString(consultationId)).append("\n");
        sb.append("    cpf: ").append(toIndentedString(cpf)).append("\n");
        sb.append("    cpfName: ").append(toIndentedString(cpfName)).append("\n");
        sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
        sb.append("    deliveryDueTime: ").append(toIndentedString(deliveryDueTime)).append("\n");
        sb.append("    deliveryOptionId: ").append(toIndentedString(deliveryOptionId)).append("\n");
        sb.append("    deliveryOptionName: ").append(toIndentedString(deliveryOptionName)).append("\n");
        sb.append("    deliveryOptionRequiredDeliveryTime: ").append(toIndentedString(deliveryOptionRequiredDeliveryTime)).append("\n");
        sb.append("    deliverySlaTime: ").append(toIndentedString(deliverySlaTime)).append("\n");
        sb.append("    deliveryTime: ").append(toIndentedString(deliveryTime)).append("\n");
        sb.append("    deliveryType: ").append(toIndentedString(deliveryType)).append("\n");
        sb.append("    exchangeSourceOrderId: ").append(toIndentedString(exchangeSourceOrderId)).append("\n");
        sb.append("    fastDeliveryProgram: ").append(toIndentedString(fastDeliveryProgram)).append("\n");
        sb.append("    fastDispatchSlaTime: ").append(toIndentedString(fastDispatchSlaTime)).append("\n");
        sb.append("    fulfillmentType: ").append(toIndentedString(fulfillmentType)).append("\n");
        sb.append("    handlingDuration: ").append(toIndentedString(handlingDuration)).append("\n");
        sb.append("    hasUpdatedRecipientAddress: ").append(toIndentedString(hasUpdatedRecipientAddress)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    isBuyerRequestCancel: ").append(toIndentedString(isBuyerRequestCancel)).append("\n");
        sb.append("    isCod: ").append(toIndentedString(isCod)).append("\n");
        sb.append("    isExchangeOrder: ").append(toIndentedString(isExchangeOrder)).append("\n");
        sb.append("    isOnHoldOrder: ").append(toIndentedString(isOnHoldOrder)).append("\n");
        sb.append("    isReplacementOrder: ").append(toIndentedString(isReplacementOrder)).append("\n");
        sb.append("    isSampleOrder: ").append(toIndentedString(isSampleOrder)).append("\n");
        sb.append("    lineItems: ").append(toIndentedString(lineItems)).append("\n");
        sb.append("    needUploadInvoice: ").append(toIndentedString(needUploadInvoice)).append("\n");
        sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
        sb.append("    packages: ").append(toIndentedString(packages)).append("\n");
        sb.append("    paidTime: ").append(toIndentedString(paidTime)).append("\n");
        sb.append("    payment: ").append(toIndentedString(payment)).append("\n");
        sb.append("    paymentMethodName: ").append(toIndentedString(paymentMethodName)).append("\n");
        sb.append("    pickUpCutOffTime: ").append(toIndentedString(pickUpCutOffTime)).append("\n");
        sb.append("    recipientAddress: ").append(toIndentedString(recipientAddress)).append("\n");
        sb.append("    releaseDate: ").append(toIndentedString(releaseDate)).append("\n");
        sb.append("    replacedOrderId: ").append(toIndentedString(replacedOrderId)).append("\n");
        sb.append("    requestCancelTime: ").append(toIndentedString(requestCancelTime)).append("\n");
        sb.append("    rtsSlaTime: ").append(toIndentedString(rtsSlaTime)).append("\n");
        sb.append("    rtsTime: ").append(toIndentedString(rtsTime)).append("\n");
        sb.append("    sellerNote: ").append(toIndentedString(sellerNote)).append("\n");
        sb.append("    shippingDueTime: ").append(toIndentedString(shippingDueTime)).append("\n");
        sb.append("    shippingProvider: ").append(toIndentedString(shippingProvider)).append("\n");
        sb.append("    shippingProviderId: ").append(toIndentedString(shippingProviderId)).append("\n");
        sb.append("    shippingType: ").append(toIndentedString(shippingType)).append("\n");
        sb.append("    splitOrCombineTag: ").append(toIndentedString(splitOrCombineTag)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
        sb.append("    ttsSlaTime: ").append(toIndentedString(ttsSlaTime)).append("\n");
        sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("    warehouseId: ").append(toIndentedString(warehouseId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of GetOrderDetailResponseDataOrders to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetOrderDetailResponseDataOrders.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'GetOrderDetailResponseDataOrders' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetOrderDetailResponseDataOrders> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(GetOrderDetailResponseDataOrders.class));

            return (TypeAdapter<T>) new TypeAdapter<GetOrderDetailResponseDataOrders>() {
                @Override
                public void write(JsonWriter out, GetOrderDetailResponseDataOrders value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public GetOrderDetailResponseDataOrders read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

