/*
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.somle.tiktok.sdk.model.Product.V202309;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.somle.tiktok.sdk.invoke.JSON;

import java.io.IOException;
import java.util.*;

/**
 * GetProductResponseDataAuditFailedReasons
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-12T06:25:14.052506Z[Etc/UTC]", comments = "Generator version: 7.6.0")
public class GetProductResponseDataAuditFailedReasons {
    public static final String SERIALIZED_NAME_LISTING_PLATFORM = "listing_platform";
    public static final String SERIALIZED_NAME_POSITION = "position";
    public static final String SERIALIZED_NAME_REASONS = "reasons";
    public static final String SERIALIZED_NAME_SUGGESTIONS = "suggestions";
    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("listing_platform");
        openapiFields.add("position");
        openapiFields.add("reasons");
        openapiFields.add("suggestions");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    @SerializedName(SERIALIZED_NAME_LISTING_PLATFORM)
    private String listingPlatform;
    @SerializedName(SERIALIZED_NAME_POSITION)
    private String position;
    @SerializedName(SERIALIZED_NAME_REASONS)
    private List<String> reasons = new ArrayList<>();
    @SerializedName(SERIALIZED_NAME_SUGGESTIONS)
    private List<String> suggestions = new ArrayList<>();

    public GetProductResponseDataAuditFailedReasons() {
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to GetProductResponseDataAuditFailedReasons
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!GetProductResponseDataAuditFailedReasons.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in GetProductResponseDataAuditFailedReasons is not found in the empty JSON string", GetProductResponseDataAuditFailedReasons.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!GetProductResponseDataAuditFailedReasons.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetProductResponseDataAuditFailedReasons` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("listing_platform") != null && !jsonObj.get("listing_platform").isJsonNull()) && !jsonObj.get("listing_platform").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `listing_platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listing_platform").toString()));
        }
        if ((jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) && !jsonObj.get("position").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("reasons") != null && !jsonObj.get("reasons").isJsonNull() && !jsonObj.get("reasons").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `reasons` to be an array in the JSON string but got `%s`", jsonObj.get("reasons").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("suggestions") != null && !jsonObj.get("suggestions").isJsonNull() && !jsonObj.get("suggestions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `suggestions` to be an array in the JSON string but got `%s`", jsonObj.get("suggestions").toString()));
        }
    }

    /**
     * Create an instance of GetProductResponseDataAuditFailedReasons given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetProductResponseDataAuditFailedReasons
     * @throws IOException if the JSON string is invalid with respect to GetProductResponseDataAuditFailedReasons
     */
    public static GetProductResponseDataAuditFailedReasons fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, GetProductResponseDataAuditFailedReasons.class);
    }

    public GetProductResponseDataAuditFailedReasons listingPlatform(String listingPlatform) {
        this.listingPlatform = listingPlatform;
        return this;
    }

    /**
     * The platform for listing the product. Possible values: - TIKTOK_SHOP - TOKOPEDIA
     *
     * @return listingPlatform
     **/
    @javax.annotation.Nullable
    public String getListingPlatform() {
        return listingPlatform;
    }

    public void setListingPlatform(String listingPlatform) {
        this.listingPlatform = listingPlatform;
    }

    public GetProductResponseDataAuditFailedReasons position(String position) {
        this.position = position;
        return this;
    }

    /**
     * The audit failure reason name.
     *
     * @return position
     **/
    @javax.annotation.Nullable
    public String getPosition() {
        return position;
    }

    public void setPosition(String position) {
        this.position = position;
    }

    public GetProductResponseDataAuditFailedReasons reasons(List<String> reasons) {
        this.reasons = reasons;
        return this;
    }

    public GetProductResponseDataAuditFailedReasons addReasonsItem(String reasonsItem) {
        if (this.reasons == null) {
            this.reasons = new ArrayList<>();
        }
        this.reasons.add(reasonsItem);
        return this;
    }

    /**
     * A brief reason for failing TikTok Shop audit.
     *
     * @return reasons
     **/
    @javax.annotation.Nullable
    public List<String> getReasons() {
        return reasons;
    }

    public void setReasons(List<String> reasons) {
        this.reasons = reasons;
    }

    public GetProductResponseDataAuditFailedReasons suggestions(List<String> suggestions) {
        this.suggestions = suggestions;
        return this;
    }

    public GetProductResponseDataAuditFailedReasons addSuggestionsItem(String suggestionsItem) {
        if (this.suggestions == null) {
            this.suggestions = new ArrayList<>();
        }
        this.suggestions.add(suggestionsItem);
        return this;
    }

    /**
     * A detailed explanation of the reason for failure.
     *
     * @return suggestions
     **/
    @javax.annotation.Nullable
    public List<String> getSuggestions() {
        return suggestions;
    }

    public void setSuggestions(List<String> suggestions) {
        this.suggestions = suggestions;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetProductResponseDataAuditFailedReasons product202309GetProductResponseDataAuditFailedReasons = (GetProductResponseDataAuditFailedReasons) o;
        return Objects.equals(this.listingPlatform, product202309GetProductResponseDataAuditFailedReasons.listingPlatform) &&
            Objects.equals(this.position, product202309GetProductResponseDataAuditFailedReasons.position) &&
            Objects.equals(this.reasons, product202309GetProductResponseDataAuditFailedReasons.reasons) &&
            Objects.equals(this.suggestions, product202309GetProductResponseDataAuditFailedReasons.suggestions);
    }

    @Override
    public int hashCode() {
        return Objects.hash(listingPlatform, position, reasons, suggestions);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetProductResponseDataAuditFailedReasons {\n");
        sb.append("    listingPlatform: ").append(toIndentedString(listingPlatform)).append("\n");
        sb.append("    position: ").append(toIndentedString(position)).append("\n");
        sb.append("    reasons: ").append(toIndentedString(reasons)).append("\n");
        sb.append("    suggestions: ").append(toIndentedString(suggestions)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert an instance of GetProductResponseDataAuditFailedReasons to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetProductResponseDataAuditFailedReasons.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'GetProductResponseDataAuditFailedReasons' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetProductResponseDataAuditFailedReasons> thisAdapter
                = gson.getDelegateAdapter(this, TypeToken.get(GetProductResponseDataAuditFailedReasons.class));

            return (TypeAdapter<T>) new TypeAdapter<GetProductResponseDataAuditFailedReasons>() {
                @Override
                public void write(JsonWriter out, GetProductResponseDataAuditFailedReasons value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public GetProductResponseDataAuditFailedReasons read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }
}

